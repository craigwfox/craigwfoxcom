[["Map",1,2,9,10,102,103],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.3.0","content-config-digest","0532a954294ad90c","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://craigwfox.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":true,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"prism\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","hiking",["Map",11,12,34,35,16,52,65,66,76,77,88,89],"2024-04-29-nebo-rim-trail",{"id":11,"data":13,"body":29,"filePath":30,"digest":31,"legacyId":32,"deferredRender":33},{"title":14,"description":15,"postSlug":16,"categories":17,"type":19,"trail":20,"location":21,"difficulty":24,"parkWebsite":25,"allTrails":26,"miles":27,"pubDate":28},"Mt Nebo - Rim Trail","Solo hike on the Rim Trail on Mt Nebo","2024-04-21-nebo-bench-road-trail",[18],"state-park","ar-state-park","Mt Nebo - Bench Road Trail",[22,23],"nebo","Mount Nebo","moderate","https://www.arkansasstateparks.com/trails/rim-trail","https://www.alltrails.com/explore/recording/afternoon-hike-at-mount-nebo-rim-trail-d1a6964?u=i&sh=duiwf7",3.3,["Date","2024-03-29T00:00:00.000Z"],"import { Image } from \"astro:assets\"\nimport SimpleGallery from \"/src/components/SimpleGallery.vue\"\nimport Image01 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-01.webp\"\nimport Image02 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-02.webp\"\nimport Image03 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-03.webp\"\nimport Image04 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-04.webp\"\nimport Image05 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-05.webp\"\nimport Image06 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-06.webp\"\nimport Image07 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-07.webp\"\nimport Image08 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-08.webp\"\nimport Image09 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-09.webp\"\nimport Image10 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-10.webp\"\nimport Image11 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-11.webp\"\nimport Image12 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-12.webp\"\nimport Image13 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-13.webp\"\nimport Image14 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-14.webp\"\nimport Image15 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-15.webp\"\nimport Image16 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-16.webp\"\nimport Image17 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-17.webp\"\nimport Image18 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-18.webp\"\nimport Image19 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-19.webp\"\nimport Image20 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-20.webp\"\nimport Image21 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-21.webp\"\nimport Image22 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-22.webp\"\nimport Image23 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-23.webp\"\nimport Image24 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-24.webp\"\nimport Image25 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-25.webp\"\nimport Image26 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-26.webp\"\nimport Image27 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-27.webp\"\nimport Image28 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-28.webp\"\nimport Image29 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-29.webp\"\nimport Image30 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-30.webp\"\nimport Image31 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-31.webp\"\nimport Image32 from \"/src/images/hiking/2024-03-29-petit-jean-rim-trail/rim-trail-32.webp\"\n\nexport const imageArry = [\n  { img: Image01, id: \"Image01\", alt: \"\" },\n  { img: Image02, id: \"Image02\", alt: \"\" },\n  { img: Image03, id: \"Image03\", alt: \"\" },\n  { img: Image04, id: \"Image04\", alt: \"\" },\n  { img: Image05, id: \"Image05\", alt: \"\" },\n  { img: Image06, id: \"Image06\", alt: \"\" },\n  { img: Image07, id: \"Image07\", alt: \"\" },\n  { img: Image08, id: \"Image08\", alt: \"\" },\n  { img: Image09, id: \"Image09\", alt: \"\" },\n  { img: Image10, id: \"Image10\", alt: \"\" },\n  { img: Image11, id: \"Image11\", alt: \"\" },\n  { img: Image12, id: \"Image12\", alt: \"\" },\n  { img: Image13, id: \"Image13\", alt: \"\" },\n  { img: Image14, id: \"Image14\", alt: \"\" },\n  { img: Image15, id: \"Image15\", alt: \"\" },\n  { img: Image16, id: \"Image16\", alt: \"\" },\n  { img: Image17, id: \"Image17\", alt: \"\" },\n  { img: Image18, id: \"Image18\", alt: \"\" },\n  { img: Image19, id: \"Image19\", alt: \"\" },\n  { img: Image20, id: \"Image20\", alt: \"\" },\n  { img: Image21, id: \"Image21\", alt: \"\" },\n  { img: Image22, id: \"Image22\", alt: \"\" },\n  { img: Image23, id: \"Image23\", alt: \"\" },\n  { img: Image24, id: \"Image24\", alt: \"\" },\n  { img: Image25, id: \"Image25\", alt: \"\" },\n  { img: Image26, id: \"Image26\", alt: \"\" },\n  { img: Image27, id: \"Image27\", alt: \"\" },\n  { img: Image28, id: \"Image28\", alt: \"\" },\n  { img: Image29, id: \"Image29\", alt: \"\" },\n  { img: Image30, id: \"Image30\", alt: \"\" },\n  { img: Image31, id: \"Image31\", alt: \"\" },\n  { img: Image32, id: \"Image32\", alt: \"\" },\n]\n\n\u003Cfigure>\n  \u003Cblockquote>\n    The 3.5-mile Rim Trail circles the mountain top and provides\n    access to all of the park's 14 miles of trail. Originally blazed\n    in the 1890s, the trail was fully developed by the CCC in the\n    1930s with the addition of stone steps and retaining walls.\n    Spectacular views spread over 100 miles of the Arkansas River\n    Valley before you, including the 1830s water route of the Trail of\n    Tears and 34,000 acre Lake Dardanelle. Accessibility:at the\n    visitor center and other locations around the mountain Blaze\n    color: yellow\n  \u003C/blockquote>\n  \u003Cfigcaption>\n    [Arkansas State\n    Parks](https://www.arkansasstateparks.com/trails/rim-trail)\n  \u003C/figcaption>\n\u003C/figure>\n\n\u003CSimpleGallery>\n  {imageArry.map(image => (\n    \u003Cfigure>\n      \u003Ca href={image.img.src} target=\"_blank\">\n        \u003CImage\n          src={image.img}\n          alt={image.alt}\n          width=\"1200\"\n          slot=\"gallery-full\"\n        />\n      \u003C/a>\n      \u003Cfigcaption>{image.alt}\u003C/figcaption>\n    \u003C/figure>\n  ))}\n\u003C/SimpleGallery>","src/content/hiking/2024-04-29-nebo-rim-trail.mdx","5517ecf2be286187","2024-04-29-nebo-rim-trail.mdx",true,"2024-04-13-petit-jean-seven-hollows",{"id":34,"data":36,"body":48,"filePath":49,"digest":50,"legacyId":51,"deferredRender":33},{"title":37,"description":38,"postSlug":34,"categories":39,"type":19,"trail":37,"location":40,"difficulty":43,"parkWebsite":44,"allTrails":45,"miles":46,"pubDate":47},"Petit Jean - Seven Hollows Trail","Solo hike on the Seven Hollows Trail on Petit Jean",[18],[41,42],"petit-jean","Petit Jean","easy","https://www.arkansasstateparks.com/trails/seven-hollows-trail","https://www.alltrails.com/explore/recording/afternoon-hike-at-seven-hollows-trail-63a9972?u=i&sh=duiwf7",4.3,["Date","2024-04-13T00:00:00.000Z"],"import { Image } from \"astro:assets\"\nimport SimpleGallery from \"/src/components/SimpleGallery.vue\"\n\nimport Image01 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-01.webp\"\nimport Image02 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-02.webp\"\nimport Image03 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-03.webp\"\nimport Image04 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-04.webp\"\nimport Image05 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-05.webp\"\nimport Image06 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-06.webp\"\nimport Image07 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-07.webp\"\nimport Image08 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-08.webp\"\nimport Image09 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-09.webp\"\nimport Image10 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-10.webp\"\nimport Image11 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-11.webp\"\nimport Image12 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-12.webp\"\nimport Image13 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-13.webp\"\nimport Image14 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-14.webp\"\nimport Image15 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-15.webp\"\nimport Image16 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-16.webp\"\nimport Image17 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-17.webp\"\nimport Image18 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-18.webp\"\nimport Image19 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-19.webp\"\nimport Image20 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-20.webp\"\nimport Image21 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-21.webp\"\nimport Image22 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-22.webp\"\nimport Image23 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-23.webp\"\nimport Image24 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-24.webp\"\nimport Image25 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-25.webp\"\nimport Image26 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-26.webp\"\nimport Image27 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-27.webp\"\nimport Image28 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-28.webp\"\nimport Image29 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-29.webp\"\nimport Image30 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-30.webp\"\nimport Image31 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-31.webp\"\nimport Image32 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-32.webp\"\nimport Image33 from \"/src/images/hiking/2024-04-13-petit-jean-seven-hollows/seven-hollows-33.webp\"\n\nexport const imageArry = [\n  { img: Image01, id: \"Image01\", alt: \"\" },\n  { img: Image02, id: \"Image02\", alt: \"\" },\n  { img: Image03, id: \"Image03\", alt: \"\" },\n  { img: Image04, id: \"Image04\", alt: \"\" },\n  { img: Image05, id: \"Image05\", alt: \"\" },\n  { img: Image06, id: \"Image06\", alt: \"\" },\n  { img: Image07, id: \"Image07\", alt: \"\" },\n  { img: Image08, id: \"Image08\", alt: \"\" },\n  { img: Image09, id: \"Image09\", alt: \"\" },\n  { img: Image10, id: \"Image10\", alt: \"\" },\n  { img: Image11, id: \"Image11\", alt: \"\" },\n  { img: Image12, id: \"Image12\", alt: \"\" },\n  { img: Image13, id: \"Image13\", alt: \"\" },\n  { img: Image14, id: \"Image14\", alt: \"\" },\n  { img: Image15, id: \"Image15\", alt: \"\" },\n  { img: Image16, id: \"Image16\", alt: \"\" },\n  { img: Image17, id: \"Image17\", alt: \"\" },\n  { img: Image18, id: \"Image18\", alt: \"\" },\n  { img: Image19, id: \"Image19\", alt: \"\" },\n  { img: Image20, id: \"Image20\", alt: \"\" },\n  { img: Image21, id: \"Image21\", alt: \"\" },\n  { img: Image22, id: \"Image22\", alt: \"\" },\n  { img: Image23, id: \"Image23\", alt: \"\" },\n  { img: Image24, id: \"Image24\", alt: \"\" },\n  { img: Image25, id: \"Image25\", alt: \"\" },\n  { img: Image26, id: \"Image26\", alt: \"\" },\n  { img: Image27, id: \"Image27\", alt: \"\" },\n  { img: Image28, id: \"Image28\", alt: \"\" },\n  { img: Image29, id: \"Image29\", alt: \"\" },\n  { img: Image30, id: \"Image30\", alt: \"\" },\n  { img: Image31, id: \"Image31\", alt: \"\" },\n  { img: Image32, id: \"Image32\", alt: \"\" },\n  { img: Image33, id: \"Image33\", alt: \"\" },\n]\n\n\u003Cfigure>\n  \u003Cblockquote>\n    This loop trail passes through a series of small canyons under the\n    canopy of a dense hardwood forest. Unique features such as a\n    natural stone arch, rock shelters, a box canyon and signs of\n    prehistoric bluff-dwelling Native Americans add to the experience\n    of this truly spectacular trail.\n  \u003C/blockquote>\n  \u003Cfigcaption>\n    [Arkansas State\n    Parks](https://www.arkansasstateparks.com/trails/seven-hollows-trail)\n  \u003C/figcaption>\n\u003C/figure>\n\n\u003CSimpleGallery>\n  {imageArry.map(image => (\n    \u003Cfigure>\n      \u003Ca href={image.img.src} target=\"_blank\">\n        \u003CImage\n          src={image.img}\n          alt={image.alt}\n          width=\"1200\"\n          slot=\"gallery-full\"\n        />\n      \u003C/a>\n      \u003Cfigcaption>{image.alt}\u003C/figcaption>\n    \u003C/figure>\n  ))}\n\u003C/SimpleGallery>","src/content/hiking/2024-04-13-petit-jean-seven-hollows.mdx","ae796d69286eaf1f","2024-04-13-petit-jean-seven-hollows.mdx",{"id":16,"data":53,"body":61,"filePath":62,"digest":63,"legacyId":64,"deferredRender":33},{"title":20,"description":54,"postSlug":34,"categories":55,"type":19,"trail":20,"location":56,"difficulty":43,"parkWebsite":57,"allTrails":58,"miles":59,"pubDate":60},"Solo hike on the Bench Road Trail on Mt Nebo",[18],[22,23],"https://www.arkansasstateparks.com/trails/bench-trail","https://www.alltrails.com/explore/recording/afternoon-hike-at-bench-trail-23fc4cb?u=i&sh=duiwf7",3.9,["Date","2024-04-20T00:00:00.000Z"],"import { Image } from \"astro:assets\"\nimport SimpleGallery from \"/src/components/SimpleGallery.vue\"\nimport Image1 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8934.webp\"\nimport Image2 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8938.webp\"\nimport Image3 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8940.webp\"\nimport Image4 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8941.webp\"\nimport Image5 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8942.webp\"\nimport Image6 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8944.webp\"\nimport Image7 from \"/src/images/hiking/2024-04-20-mt-nebo-bench-trail/IMG_8946.webp\"\n\nexport const imageArry = [\n  {\n    img: Image1,\n    id: \"Image1\",\n    alt: \"View from the Bench Trail Overlook at the start of the trail\",\n  },\n  {\n    img: Image2,\n    id: \"Image2\",\n    alt: \"Bench road trail weaving through the forest, it's mostly a service road\",\n  },\n  {\n    img: Image3,\n    id: \"Image3\",\n    alt: \"Small pool of water in some large rocks\",\n  },\n  { img: Image4, id: \"Image4\", alt: \"Rock filled drainage area\" },\n  {\n    img: Image5,\n    id: \"Image5\",\n    alt: \"View of the pond found on the bench trail\",\n  },\n  {\n    img: Image6,\n    id: \"Image6\",\n    alt: \"Full view of the pond found on the bench trail\",\n  },\n  {\n    img: Image7,\n    id: \"Image7\",\n    alt: \"There are several camping sites that can be found on the Bench Trail\",\n  },\n]\n\nSolo hike on the Bench Road Trail on Mt Nebo\n\n\u003Cfigure>\n  \u003Cblockquote>\n    Begins at the overlook shelter visible in the drive up the\n    mountain to the park. There is a narrow shelf called a bench that\n    encircles the entire mountain. In the early 1900s, this bench\n    featured a road. Today the bench is a trail route through a\n    woodland that teems with large trees and wildlife. Fern Lake,\n    remnants of historic springs, and steps that were a part of an\n    early resort development are still visible. The trail is level in\n    most places and offers views from the mountain, especially during\n    seasons from late fall through early spring. For a map and more\n    information, visit MTBProject.com.\n  \u003C/blockquote>\n  \u003Cfigcaption>\n    [Arkansas State\n    Parks](https://www.arkansasstateparks.com/trails/bench-trail)\n  \u003C/figcaption>\n\u003C/figure>\n\n\u003CSimpleGallery>\n  {imageArry.map(image => (\n    \u003Cfigure>\n      \u003Ca href={image.img.src} target=\"_blank\">\n        \u003CImage\n          src={image.img}\n          alt={image.alt}\n          width=\"1200\"\n          slot=\"gallery-full\"\n        />\n      \u003C/a>\n      \u003Cfigcaption>{image.alt}\u003C/figcaption>\n    \u003C/figure>\n  ))}\n\u003C/SimpleGallery>","src/content/hiking/2024-04-21-nebo-bench-road-trail.mdx","4080af4836ae0e21","2024-04-21-nebo-bench-road-trail.mdx","2024-08-10-nebo-rim-trail",{"id":65,"data":67,"filePath":73,"digest":74,"legacyId":75,"deferredRender":33},{"title":14,"description":15,"postSlug":65,"categories":68,"type":19,"trail":14,"location":69,"difficulty":24,"parkWebsite":25,"allTrails":70,"noSingle":33,"miles":71,"pubDate":72},[18],[22,23],"https://www.alltrails.com/explore/recording/afternoon-hike-at-mount-nebo-rim-trail-20aee3a?u=i&sh=duiwf7",3.4,["Date","2024-08-10T00:00:00.000Z"],"src/content/hiking/2024-08-10-nebo-rim-trail.mdx","65edd00c8c1918c0","2024-08-10-nebo-rim-trail.mdx","2024-05-10-petit-jean-seven-hollows",{"id":76,"data":78,"filePath":85,"digest":86,"legacyId":87,"deferredRender":33},{"title":37,"description":79,"postSlug":11,"categories":80,"type":19,"trail":37,"location":81,"difficulty":43,"parkWebsite":44,"allTrails":82,"noSingle":33,"miles":83,"pubDate":84},"A hike with Rebecca on the Seven Hollows Trail on Petit Jean",[18],[41,42],"https://www.alltrails.com/explore/recording/afternoon-hike-at-seven-hollows-trail-123b7f0?u=i&sh=duiwf7",4.84,["Date","2024-05-10T00:00:00.000Z"],"src/content/hiking/2024-05-10-petit-jean-seven-hollows.mdx","5ee811cd9cc9bdd4","2024-05-10-petit-jean-seven-hollows.mdx","2024-10-21-petit-jean-cedar-falls-trail",{"id":88,"data":90,"filePath":99,"digest":100,"legacyId":101,"deferredRender":33},{"title":91,"description":92,"postSlug":88,"categories":93,"type":19,"trail":91,"location":94,"difficulty":95,"parkWebsite":96,"allTrails":92,"noSingle":33,"miles":97,"pubDate":98},"Petit Jean - Cedar Falls Trail","",[18],[41,42],"moderate, strenuous","https://www.arkansasstateparks.com/trails/cedar-falls-trail-national-recreation-trail",2,["Date","2024-10-21T00:00:00.000Z"],"src/content/hiking/2024-10-21-petit-jean-cedar-falls-trail.mdx","1f50d95be9095685","2024-10-21-petit-jean-cedar-falls-trail.mdx","blog",["Map",104,105,120,121,213,214,227,228,309,310,361,362,376,377,391,392,436,437,466,467],"2021-11/versions-of-craigwfox-com",{"id":104,"data":106,"body":116,"filePath":117,"digest":118,"legacyId":119,"deferredRender":33},{"title":107,"description":108,"postSlug":109,"image":110,"ogImage":111,"ogImageAlt":112,"categories":113,"pubDate":115},"The versions of craigwfox.com","A look at all the versions of this site.","versions-of-craigwfox-com/","images/rss/2021-11-versions-of-craigwfox.png","images/twitter/2021-11-versions-of-craigwfox.png","The different version of craigwfox.com",[114],"dev",["Date","2021-11-25T00:00:00.000Z"],"import { Image } from \"astro:assets\"\nexport const imageWidth = \"700\"\nexport const imageHeight = \"700\"\nexport const imageFormat = \"webp\"\nexport const imageAspectRatio = \"16:9\"\n\n## Version 1.0\n\nThis was the first version of my personal site, it was meant to be a mix of a blog and a portfolio for my graphic design work.\n\n\u003Cdiv class=\"post-image\">\n  \u003CImage\n    src=\"/images/posts/2021-11/versions-of-craigwfox/version-1.png\"\n    alt=\"Screen capture of craigwfox.com version 1\"\n    width={imageWidth}\n    height={imageHeight}\n    format={imageFormat}\n    aspectRatio={imageAspectRatio}\n  />\n\u003C/div>\n\n## Version 2.0\n\nVersion two was still meant to be a portfolio site for graphic design work. I remember being really proud of the rounded corners, I had learned that you could use positioned images to create them. So I was using them everywhere.\n\n\u003Cdiv class=\"post-image\">\n  \u003CImage\n    src=\"/images/posts/2021-11/versions-of-craigwfox/version-2.png\"\n    alt=\"Screen capture of craigwfox.com version 2\"\n    width={imageWidth}\n    height={imageHeight}\n    format={imageFormat}\n    aspectRatio={imageAspectRatio}\n  />\n\u003C/div>\n\n## Version 3.0\n\nI remember having fun sketching out the goofy illustrations. I think I had some inspiration from some of the fun things I had seen on CSS zen gardens.\n\n\u003Cdiv class=\"post-image\">\n  \u003CImage\n    src=\"/images/posts/2021-11/versions-of-craigwfox/version-3.png\"\n    alt=\"Screen capture of craigwfox.com version 3\"\n    width={imageWidth}\n    height={imageHeight}\n    format={imageFormat}\n    aspectRatio={imageAspectRatio}\n  />\n\u003C/div>\n\n## Version 4.0\n\nThis version was done after working as a front-end developer at The Richland Group for about four years. It was my first go at using a static site generator (Jekyll) and was my first personal site I was really happy with. The other sites were fun, but the amount I had learned between those sites and this was was quite substantial.\n\n\u003Cdiv class=\"post-image\">\n  \u003CImage\n    src=\"/images/posts/2021-11/versions-of-craigwfox/version-4.png\"\n    alt=\"Screen capture of craigwfox.com version 4\"\n    width={imageWidth}\n    height={imageHeight}\n    format={imageFormat}\n    aspectRatio={imageAspectRatio}\n  />\n\u003C/div>\n\n## Version 5.0\n\nThis was done over my Thanksgiving vacation in Nov 2021. I'd gotten tired of my old site's portfolio being so out of date and was really wanting to finally make a blog so I decided now was the time. I initially started with planning to keep it looking the same as the old site, but the urge to redo it all took over.\n\n\u003Cdiv class=\"post-image\">\n  \u003CImage\n    src=\"/images/posts/2021-11/versions-of-craigwfox/version-5.png\"\n    alt=\"Screen capture of craigwfox.com version 4\"\n    width={imageWidth}\n    height={imageHeight}\n    format={imageFormat}\n    aspectRatio={imageAspectRatio}\n  />\n\u003C/div>","src/content/blog/2021-11/versions-of-craigwfox-com.mdx","40f1c3ed15148cd5","2021-11/versions-of-craigwfox-com.mdx","2022-03/theme-toggle-web-component",{"id":120,"data":122,"body":133,"filePath":134,"digest":135,"rendered":136,"legacyId":212},{"title":123,"description":124,"postSlug":125,"image":126,"ogImage":127,"ogImageAlt":128,"categories":129,"pubDate":132},"A web component to toggle themes","A simple web component to toggle the site themes and modes.","theme-toggle-web-component/","images/rss/2022-03-web-component-toggle.webp","images/twitter/2022-03-web-component-toggle.webp","A web component to toggle site themes / modes",[114,130,131],"js","web components",["Date","2022-03-10T00:00:00.000Z"],"I've been doing some learning about web components and as practice decided to make a simple one that could be used to toggle themes or other accessibility features.\n\n## Setting up the custom HTML element\n\n### The base element\n\nThe base of a custom element can be as simple as just a tag. For example this one will be a custom HTML element with a few attributes and an image inside.\n\nTo get this going we will make a custom element called `theme-switcher`. The name for custom elements should be two words hyphenated and should try to describe what that element is doing.\n\n```html\n\u003Ctheme-switcher>\u003C/theme-switcher>\n```\n\n### The attributes\n\nWe will use a few attributes on our custom element to pass along what options we want in our web component. The first three of these attributes will be controlling most of the heavy lifting.\n\n#### Modes\n\nModes is a comma delineated list of the different themes that we will be swapping in this example.\n\n#### Current\n\nThe current attribute acts as both the default attribute for the component and will change when the custom element is clicked.\n\n#### dataAttr\n\nThe dataAttr is what data attribute we want to be added to the body tag of the page. This is how we will use CSS to change the theme.\n\nThese three attribute combined will change the body attribute and change the aria-label.\n\nHere is our progress so far.\n\n```html\n\u003Ctheme-switcher\n  modes=\"light, dark\"\n  dataAttr=\"data-theme\"\n  current=\"dark\"\n>\u003C/theme-switcher>\n```\n\n### Accessibility\n\nBefore we move onto the JS we need a couple of accessibility attribute.\n\n#### aria-label\n\nFirst we have out initial aria-label that describes what this element is going to change when clicked. This will also update when the button is clicked to show what has changed.\n\n#### aria-live=polite\n\nThis won't change when the element is clicked, but it will tell the screen reader to announce the changes to the aria-label.\n\n### The full custom element code\n\nThis is the full button in action. I've also added an svg image, but this could also be an image of your choice, text, or maybe you could make the whole button a custom shape with CSS.\n\n```html\n\u003Ctheme-switcher\n  modes=\"light, dark\"\n  dataAttr=\"data-theme\"\n  current=\"dark\"\n  aria-label=\"Change to light mode\"\n  aria-live=\"polite\"\n>\n  \u003Csvg\n    aria-hidden=\"true\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    stroke-width=\"2\"\n    stroke-linecap=\"square\"\n    stroke-linejoin=\"round\"\n  >\n    \u003Ccircle cx=\"12\" cy=\"12\" r=\"5\" />\n    \u003Cpath\n      d=\"M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\"\n    />\n  \u003C/svg>\n\u003C/theme-switcher>\n```\n\n\u003Cp class=\"post-note\">Be aware that adding text with while using an aria-label on the base component will probably result in assistive technology either ignoring the inner text or reading both the aria-label and the inner text.\u003C/p>\n\n## The JS\n\n### The base JS for defining the custom element\n\nTo get started we will need to define the web component. To do that we will use a class constructor that will be named the same as the custom element, but instead of hyphenation it will be camel case. Inside of the of the class we will add a constructor function and inside of the super.\n\n```js\nclass ThemeSwitcher {\n  constructor() {\n    super()\n  }\n}\n```\n\nNext will define the element. The first argument will be the custom elements name matching the HTML. The second argument will be the name of the class we added above.\n\n```js\nclass ThemeSwitcher {\n  constructor() {\n    super()\n  }\n}\n\ncustomElements.define(\"theme-switcher\", ThemeSwitcher)\n```\n\nAdditionally in this example I want to extend the HTMLButtonElement. This means that the custom element will inherit the same styles and functionality of a normal HTML button. This prevents us from having to do additional CSS and JS to make things like focusing work properly.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    super()\n  }\n}\ncustomElements.define(\"theme-switcher\", ThemeSwitcher, {\n  extends: \"button\",\n})\n```\n\n\u003Cp class=\"post-note\">This isn't supported in Safari on iOS or MacOS so you will either need to fallback, install a polyfill, or not extend the element.\u003C/p>\n\n### Getting the data from the attributes\n\nThe first part of getting the data from the attributes is to decide which of these attributes are static and which are dynamic.\n\n#### Dynamic attributes\n\nTo get the dynamic attribute we will need to to use the `observedAttributes` function.\n\n```js\nstatic get observedAttributes() {\n  return [\"current\"];\n}\n```\n\nNow that you are observing those attributes you can get and set that value by adding `get current ()` and `set current()`. Now then you access and update the current attribute in the web component JS it will update the attribute on the custom element.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    ...\n  }\n\n  static get observedAttributes() {\n    return [\"current\"];\n  }\n\n  get current() {\n    return this.getAttribute(\"current\");\n  }\n\n  set current(val) {\n    return this.setAttribute(\"current\", val);\n  }\n}\n\ncustomElements.define(...);\n```\n\nNow we can grab those static attributes (dataAttr and modes). Will look a bit more like traditional JS. In this case `this` will be referring to the custom element. These will be available to the entire class not just things inside the constructor.\n\nThe dataAttr is pretty straight forward we are just grabbing a string of what is inside it. For the modes we will grab the two modes and then split them and trim up and extra spacing.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    super();\n\n    // Getting the static attributes (dataAttr and modes)\n    this.dataAttr = this.getAttribute(\"dataAttr\");\n\n    this.mode1 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map((index) => index.trim())[0];\n\n    this.mode2 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map((index) => index.trim())[1];\n  }\n  ...\n}\n```\n\nThe end result of getting all the attributes should end up looking something like this.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    super()\n\n    // Getting the static attributes (dataAttr and modes)\n    this.dataAttr = this.getAttribute(\"dataAttr\")\n\n    this.mode1 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map(index => index.trim())[0]\n\n    this.mode2 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map(index => index.trim())[1]\n  }\n\n  static get observedAttributes() {\n    return [\"current\"]\n  }\n\n  get current() {\n    return this.getAttribute(\"current\")\n  }\n\n  set current(val) {\n    return this.setAttribute(\"current\", val)\n  }\n}\ncustomElements.define(\"theme-switcher\", ThemeSwitcher, {\n  extends: \"button\",\n})\n```\n\n### a11y updates\n\nHere we will setup a function to swap the aria-label on the `\u003Ctheme-switcher>` element. This will be used later when we setup the swap function.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n  ...\n  }\n  ariaLabel(state) {\n    this.setAttribute(\"aria-label\", `${state} mode`);\n  }\n}\n```\n\n### Body attribute swap\n\nWe need to get the body element of the page using `document.querySelector`.\n\nThen we will also check to see if a matching data attribute has already been added to the theme and if so sets the current to match that.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    ...\n    // Dom elements\n    this.body = document.querySelector(\"body\");\n\n    // checks if a default has been set on the body\n    if (this.body.getAttribute(this.dataAttr)) {\n      this.current = this.body.getAttribute(this.dataAttr);\n    }\n    ...\n  }\n  ...\n}\n```\n\n### Setting up the swapping functions and event listener\n\nOk, now it's time to add the the function to change attributes and listen for clicks.\n\nFirst up is adding swap function. Here is where we:\n\n- Change toggle current attribute\n- Call the ariaLabel function to change the aria-label attribute\n- Add / update the body element's data attribute\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    ...\n  }\n  ...\n  swap() {\n    if (this.current === this.mode1) {\n      this.current = this.mode2;\n      this.ariaLabel(this.mode1);\n      this.body.setAttribute(this.dataAttr, `${this.mode2}`);\n    } else {\n      this.current = this.mode1;\n      this.ariaLabel(this.mode2);\n      this.body.setAttribute(this.dataAttr, `${this.mode1}`);\n    }\n  }\n  ...\n}\n```\n\nNow that we have the swap function we need to bind it and the ariaLabel function we made in a previous step so that they are accessible to the reset of the web component.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    super();\n\n    // Bindings\n    this.swap = this.swap.bind(this);\n    this.ariaLabel = this.ariaLabel.bind(this);\n  }\n  ...\n}\n```\n\nAnd finally now that we have the bindings set we can add the event listener to trigger the swap function.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    ...\n    this.addEventListener(\"click\", this.swap);\n  }\n  ...\n}\n```\n\n### Final JS for the theme switcher\n\nAfter all that we will end with this JS below.\n\n```js\nclass ThemeSwitcher extends HTMLButtonElement {\n  constructor() {\n    super()\n\n    // Bindings\n    this.swap = this.swap.bind(this)\n    this.ariaLabel = this.ariaLabel.bind(this)\n\n    // Get static attributes\n    this.dataAttr = this.getAttribute(\"dataAttr\")\n    this.mode1 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map(index => index.trim())[0]\n    this.mode2 = this.getAttribute(\"modes\")\n      .split(\",\")\n      .map(index => index.trim())[1]\n\n    // Grab dom elements\n    this.body = document.querySelector(\"body\")\n\n    // Check for a default theme setting on the body\n    if (this.body.getAttribute(this.dataAttr)) {\n      this.current = this.body.getAttribute(this.dataAttr)\n    }\n\n    // sets the click listener to fire the swap function\n    this.addEventListener(\"click\", this.swap)\n  }\n\n  // Swaps the attribute\n  ariaLabel(state) {\n    this.setAttribute(\"aria-label\", `${state} mode`)\n  }\n\n  // Fires all the attribute swapping\n  swap() {\n    if (this.current === this.mode1) {\n      this.current = this.mode2\n      this.ariaLabel(this.mode1)\n      this.body.setAttribute(this.dataAttr, `${this.mode2}`)\n    } else {\n      this.current = this.mode1\n      this.ariaLabel(this.mode2)\n      this.body.setAttribute(this.dataAttr, `${this.mode1}`)\n    }\n  }\n\n  // Observe current\n  static get observedAttributes() {\n    return [\"current\"]\n  }\n\n  // Get current\n  get current() {\n    return this.getAttribute(\"current\")\n  }\n\n  // Set current\n  set current(val) {\n    return this.setAttribute(\"current\", val)\n  }\n}\ncustomElements.define(\"theme-switcher\", ThemeSwitcher, {\n  extends: \"button\",\n})\n```\n\n## Live demo\n\nHere is a live working demo on CodePen.\n\n\u003Ciframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"Theme switcher web component\" src=\"https://codepen.io/craigwfox/embed/abVPWjj?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/abVPWjj\">\n  Theme switcher web component\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n## Taking it further\n\nWith some more time we could probably take this web component a bit further. It should probably write something to local storage to carry user selections between pages and sessions. You could also change it to support more than a two modes.\n\n## Support\n\nOverall [support is fairly good](https://caniuse.com/custom-elementsv1). The big issue is that customizing built-in elements isn't supported in iOS / MacOS Safari, which means the example in this post won't actually work in Safari. The work around for the time being would be to add the additional CSS and JS to make the element work like a button yourself instead of extending the `HTMLButtonElement`.\n\n## Use it on your own site\n\nFeel free to reuse the code in this port or find it on [github](https://github.com/craigwfox/simple-theme-switcher) and [npm](https://www.npmjs.com/package/simple-theme-switcher).","src/content/blog/2022-03/theme-toggle-web-component.md","d660d0771250863f",{"html":137,"metadata":138},"\u003Cp>I’ve been doing some learning about web components and as practice decided to make a simple one that could be used to toggle themes or other accessibility features.\u003C/p>\n\u003Ch2 id=\"setting-up-the-custom-html-element\">Setting up the custom HTML element\u003C/h2>\n\u003Ch3 id=\"the-base-element\">The base element\u003C/h3>\n\u003Cp>The base of a custom element can be as simple as just a tag. For example this one will be a custom HTML element with a few attributes and an image inside.\u003C/p>\n\u003Cp>To get this going we will make a custom element called \u003Ccode>theme-switcher\u003C/code>. The name for custom elements should be two words hyphenated and should try to describe what that element is doing.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>theme-switcher\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>theme-switcher\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-attributes\">The attributes\u003C/h3>\n\u003Cp>We will use a few attributes on our custom element to pass along what options we want in our web component. The first three of these attributes will be controlling most of the heavy lifting.\u003C/p>\n\u003Ch4 id=\"modes\">Modes\u003C/h4>\n\u003Cp>Modes is a comma delineated list of the different themes that we will be swapping in this example.\u003C/p>\n\u003Ch4 id=\"current\">Current\u003C/h4>\n\u003Cp>The current attribute acts as both the default attribute for the component and will change when the custom element is clicked.\u003C/p>\n\u003Ch4 id=\"dataattr\">dataAttr\u003C/h4>\n\u003Cp>The dataAttr is what data attribute we want to be added to the body tag of the page. This is how we will use CSS to change the theme.\u003C/p>\n\u003Cp>These three attribute combined will change the body attribute and change the aria-label.\u003C/p>\n\u003Cp>Here is our progress so far.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>theme-switcher\u003C/span>\n  \u003Cspan class=\"token attr-name\">modes\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>light, dark\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">dataAttr\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>data-theme\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">current\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>dark\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>theme-switcher\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"accessibility\">Accessibility\u003C/h3>\n\u003Cp>Before we move onto the JS we need a couple of accessibility attribute.\u003C/p>\n\u003Ch4 id=\"aria-label\">aria-label\u003C/h4>\n\u003Cp>First we have out initial aria-label that describes what this element is going to change when clicked. This will also update when the button is clicked to show what has changed.\u003C/p>\n\u003Ch4 id=\"aria-livepolite\">aria-live=polite\u003C/h4>\n\u003Cp>This won’t change when the element is clicked, but it will tell the screen reader to announce the changes to the aria-label.\u003C/p>\n\u003Ch3 id=\"the-full-custom-element-code\">The full custom element code\u003C/h3>\n\u003Cp>This is the full button in action. I’ve also added an svg image, but this could also be an image of your choice, text, or maybe you could make the whole button a custom shape with CSS.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>theme-switcher\u003C/span>\n  \u003Cspan class=\"token attr-name\">modes\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>light, dark\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">dataAttr\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>data-theme\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">current\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>dark\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">aria-label\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>Change to light mode\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token attr-name\">aria-live\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>polite\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>svg\u003C/span>\n    \u003Cspan class=\"token attr-name\">aria-hidden\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>true\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">xmlns\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>http://www.w3.org/2000/svg\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">width\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>20\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">height\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>20\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">viewBox\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>0 0 24 24\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">fill\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>none\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">stroke\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>#ffffff\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">stroke-width\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>2\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">stroke-linecap\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>square\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token attr-name\">stroke-linejoin\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>round\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n  \u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>circle\u003C/span> \u003Cspan class=\"token attr-name\">cx\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>12\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">cy\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>12\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">r\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>5\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token punctuation\">/>\u003C/span>\u003C/span>\n    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>path\u003C/span>\n      \u003Cspan class=\"token attr-name\">d\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\n    \u003Cspan class=\"token punctuation\">/>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>svg\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>theme-switcher\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp class=\"post-note\">Be aware that adding text with while using an aria-label on the base component will probably result in assistive technology either ignoring the inner text or reading both the aria-label and the inner text.\u003C/p>\n\u003Ch2 id=\"the-js\">The JS\u003C/h2>\n\u003Ch3 id=\"the-base-js-for-defining-the-custom-element\">The base JS for defining the custom element\u003C/h3>\n\u003Cp>To get started we will need to define the web component. To do that we will use a class constructor that will be named the same as the custom element, but instead of hyphenation it will be camel case. Inside of the of the class we will add a constructor function and inside of the super.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>Next will define the element. The first argument will be the custom elements name matching the HTML. The second argument will be the name of the class we added above.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\ncustomElements\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">define\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"theme-switcher\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> ThemeSwitcher\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>Additionally in this example I want to extend the HTMLButtonElement. This means that the custom element will inherit the same styles and functionality of a normal HTML button. This prevents us from having to do additional CSS and JS to make things like focusing work properly.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\ncustomElements\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">define\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"theme-switcher\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> ThemeSwitcher\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token keyword\">extends\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">\"button\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp class=\"post-note\">This isn't supported in Safari on iOS or MacOS so you will either need to fallback, install a polyfill, or not extend the element.\u003C/p>\n\u003Ch3 id=\"getting-the-data-from-the-attributes\">Getting the data from the attributes\u003C/h3>\n\u003Cp>The first part of getting the data from the attributes is to decide which of these attributes are static and which are dynamic.\u003C/p>\n\u003Ch4 id=\"dynamic-attributes\">Dynamic attributes\u003C/h4>\n\u003Cp>To get the dynamic attribute we will need to to use the \u003Ccode>observedAttributes\u003C/code> function.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">static\u003C/span> \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">observedAttributes\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>Now that you are observing those attributes you can get and set that value by adding \u003Ccode>get current ()\u003C/code> and \u003Ccode>set current()\u003C/code>. Now then you access and update the current attribute in the web component JS it will update the attribute on the custom element.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token operator\">...\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">static\u003C/span> \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">observedAttributes\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">set\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">val\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> val\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\ncustomElements\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">define\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">...\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>Now we can grab those static attributes (dataAttr and modes). Will look a bit more like traditional JS. In this case \u003Ccode>this\u003C/code> will be referring to the custom element. These will be available to the entire class not just things inside the constructor.\u003C/p>\n\u003Cp>The dataAttr is pretty straight forward we are just grabbing a string of what is inside it. For the modes we will grab the two modes and then split them and trim up and extra spacing.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Getting the static attributes (dataAttr and modes)\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"dataAttr\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>The end result of getting all the attributes should end up looking something like this.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Getting the static attributes (dataAttr and modes)\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"dataAttr\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">static\u003C/span> \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">observedAttributes\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token keyword\">set\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">val\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> val\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\ncustomElements\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">define\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"theme-switcher\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> ThemeSwitcher\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token keyword\">extends\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">\"button\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"a11y-updates\">a11y updates\u003C/h3>\n\u003Cp>Here we will setup a function to swap the aria-label on the \u003Ccode>&#x3C;theme-switcher>\u003C/code> element. This will be used later when we setup the swap function.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">state\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"aria-label\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>state\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token string\"> mode\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"body-attribute-swap\">Body attribute swap\u003C/h3>\n\u003Cp>We need to get the body element of the page using \u003Ccode>document.querySelector\u003C/code>.\u003C/p>\n\u003Cp>Then we will also check to see if a matching data attribute has already been added to the theme and if so sets the current to match that.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token operator\">...\u003C/span>\n    \u003Cspan class=\"token comment\">// Dom elements\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body \u003Cspan class=\"token operator\">=\u003C/span> document\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">querySelector\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"body\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token comment\">// checks if a default has been set on the body\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span>\n    \u003Cspan class=\"token operator\">...\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"setting-up-the-swapping-functions-and-event-listener\">Setting up the swapping functions and event listener\u003C/h3>\n\u003Cp>Ok, now it’s time to add the the function to change attributes and listen for clicks.\u003C/p>\n\u003Cp>First up is adding swap function. Here is where we:\u003C/p>\n\u003Cul>\n\u003Cli>Change toggle current attribute\u003C/li>\n\u003Cli>Call the ariaLabel function to change the aria-label attribute\u003C/li>\n\u003Cli>Add / update the body element’s data attribute\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token operator\">...\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n  \u003Cspan class=\"token function\">swap\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>Now that we have the swap function we need to bind it and the ariaLabel function we made in a previous step so that they are accessible to the reset of the web component.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Bindings\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>swap \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">swap\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">bind\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>ariaLabel \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">bind\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>And finally now that we have the bindings set we can add the event listener to trigger the swap function.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token operator\">...\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">addEventListener\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"click\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>swap\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"final-js-for-the-theme-switcher\">Final JS for the theme switcher\u003C/h3>\n\u003Cp>After all that we will end with this JS below.\u003C/p>\n\u003Cpre class=\"language-js\" data-language=\"js\">\u003Ccode is:raw=\"\" class=\"language-js\">\u003Cspan class=\"token keyword\">class\u003C/span> \u003Cspan class=\"token class-name\">ThemeSwitcher\u003C/span> \u003Cspan class=\"token keyword\">extends\u003C/span> \u003Cspan class=\"token class-name\">HTMLButtonElement\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token function\">constructor\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">super\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Bindings\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>swap \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">swap\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">bind\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>ariaLabel \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">bind\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Get static attributes\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"dataAttr\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"modes\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">split\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\",\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">index\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> index\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">trim\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Grab dom elements\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body \u003Cspan class=\"token operator\">=\u003C/span> document\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">querySelector\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"body\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token comment\">// Check for a default theme setting on the body\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n    \u003Cspan class=\"token comment\">// sets the click listener to fire the swap function\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">addEventListener\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"click\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>swap\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token comment\">// Swaps the attribute\u003C/span>\n  \u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">state\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"aria-label\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>state\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token string\"> mode\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token comment\">// Fires all the attribute swapping\u003C/span>\n  \u003Cspan class=\"token function\">swap\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>current \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ariaLabel\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode2\u003Cspan class=\"token punctuation\">)\u003C/span>\n      \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>body\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>dataAttr\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>mode1\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token punctuation\">}\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token comment\">// Observe current\u003C/span>\n  \u003Cspan class=\"token keyword\">static\u003C/span> \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">observedAttributes\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token comment\">// Get current\u003C/span>\n  \u003Cspan class=\"token keyword\">get\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">getAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\n  \u003Cspan class=\"token comment\">// Set current\u003C/span>\n  \u003Cspan class=\"token keyword\">set\u003C/span> \u003Cspan class=\"token function\">current\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">val\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">setAttribute\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"current\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> val\u003Cspan class=\"token punctuation\">)\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\ncustomElements\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">define\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"theme-switcher\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> ThemeSwitcher\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token keyword\">extends\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">\"button\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"live-demo\">Live demo\u003C/h2>\n\u003Cp>Here is a live working demo on CodePen.\u003C/p>\n\u003Ciframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"Theme switcher web component\" src=\"https://codepen.io/craigwfox/embed/abVPWjj?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/abVPWjj\">\n  Theme switcher web component&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Ch2 id=\"taking-it-further\">Taking it further\u003C/h2>\n\u003Cp>With some more time we could probably take this web component a bit further. It should probably write something to local storage to carry user selections between pages and sessions. You could also change it to support more than a two modes.\u003C/p>\n\u003Ch2 id=\"support\">Support\u003C/h2>\n\u003Cp>Overall \u003Ca href=\"https://caniuse.com/custom-elementsv1\">support is fairly good\u003C/a>. The big issue is that customizing built-in elements isn’t supported in iOS / MacOS Safari, which means the example in this post won’t actually work in Safari. The work around for the time being would be to add the additional CSS and JS to make the element work like a button yourself instead of extending the \u003Ccode>HTMLButtonElement\u003C/code>.\u003C/p>\n\u003Ch2 id=\"use-it-on-your-own-site\">Use it on your own site\u003C/h2>\n\u003Cp>Feel free to reuse the code in this port or find it on \u003Ca href=\"https://github.com/craigwfox/simple-theme-switcher\">github\u003C/a> and \u003Ca href=\"https://www.npmjs.com/package/simple-theme-switcher\">npm\u003C/a>.\u003C/p>",{"headings":139,"imagePaths":207,"frontmatter":208},[140,143,147,150,154,157,160,163,165,168,171,174,177,180,183,186,189,192,195,198,201,204],{"depth":97,"slug":141,"text":142},"setting-up-the-custom-html-element","Setting up the custom HTML element",{"depth":144,"slug":145,"text":146},3,"the-base-element","The base element",{"depth":144,"slug":148,"text":149},"the-attributes","The attributes",{"depth":151,"slug":152,"text":153},4,"modes","Modes",{"depth":151,"slug":155,"text":156},"current","Current",{"depth":151,"slug":158,"text":159},"dataattr","dataAttr",{"depth":144,"slug":161,"text":162},"accessibility","Accessibility",{"depth":151,"slug":164,"text":164},"aria-label",{"depth":151,"slug":166,"text":167},"aria-livepolite","aria-live=polite",{"depth":144,"slug":169,"text":170},"the-full-custom-element-code","The full custom element code",{"depth":97,"slug":172,"text":173},"the-js","The JS",{"depth":144,"slug":175,"text":176},"the-base-js-for-defining-the-custom-element","The base JS for defining the custom element",{"depth":144,"slug":178,"text":179},"getting-the-data-from-the-attributes","Getting the data from the attributes",{"depth":151,"slug":181,"text":182},"dynamic-attributes","Dynamic attributes",{"depth":144,"slug":184,"text":185},"a11y-updates","a11y updates",{"depth":144,"slug":187,"text":188},"body-attribute-swap","Body attribute swap",{"depth":144,"slug":190,"text":191},"setting-up-the-swapping-functions-and-event-listener","Setting up the swapping functions and event listener",{"depth":144,"slug":193,"text":194},"final-js-for-the-theme-switcher","Final JS for the theme switcher",{"depth":97,"slug":196,"text":197},"live-demo","Live demo",{"depth":97,"slug":199,"text":200},"taking-it-further","Taking it further",{"depth":97,"slug":202,"text":203},"support","Support",{"depth":97,"slug":205,"text":206},"use-it-on-your-own-site","Use it on your own site",[],{"tags":209,"categories":210,"postSlug":125,"pubDate":211,"title":123,"description":124,"image":126,"ogImage":127,"ogImageAlt":128},"post, post-dev",[114,130,131],["Date","2022-03-10T00:00:00.000Z"],"2022-03/theme-toggle-web-component.md","2022-05/fluid-type-and-sizing",{"id":213,"data":215,"body":223,"filePath":224,"digest":225,"legacyId":226,"deferredRender":33},{"title":216,"description":217,"postSlug":218,"image":219,"ogImage":219,"ogImageAlt":217,"categories":220,"pubDate":222},"Fluid type and sizing using clamp(), min(), max()","A guide to using clamp(), min(), and max() to create fluid type and sizing in CSS.","fluid-type-and-sizing/","images/twitter/2022-05-13-fluid-sizing.png",[114,221],"css",["Date","2022-05-13T00:00:00.000Z"],"import CssHotness from \"../../../components/CssHotness.vue\"\n\nFluid type and sizing started gaining traction in the front end community over the last couple of years. It has allowed us to simplify a lot of our responsive code and in many cases remove media queries all together. In this article I will be talking about how clamp(), min(), and max() work and some of the more popular ways that they are used.\n\n\u003CCssHotness curPost=\"1\" />\n\n## min() and max()\n\nThe min() and max() functions take multiple comma-separated values (most of the time I find myself only using two). These values can be any combination of numbers/unit types. Most commonly you will run into people using a mix of viewport units, percentages, and rems.\n\n### min()\n\nThe min() function compares all of the values passed through it and then determines which is the smallest. For example if you have the div below:\n\n```css\ndiv {\n  width: min(80%, 1000px);\n}\n```\n\nOn mobile the 80% will be the smallest unit. As you expand the browser and the div eventually reaches 1000px wide the div will then stop expanding because 1000px becomes the new smallest unit.\n\nYou can also do math inside of min() without the need of calc() (also in max() and clamp()).\n\n```css\ndiv {\n  width: min(80% - 2rem, 1000px);\n}\n```\n\nYou might be asking, \"Why would I do this instead of just using a width and max-width?\" Well there are a few upsides of this method, since it's one line we can use a custom property which makes it easier to share the values between elements, but also you can override the custom property in a media query.\n\n```css\ndiv {\n  --min-value: 50rem, 80%;\n\n  width: min(var(--min-value));\n}\n\n@media (min-width: 768px) {\n  --min-value: 70rem, 80%;\n}\n```\n\nI think the bigger advantage though is that the min() function (and max()) can take more than two values. For example you can add in a value for ch units so that it will scale between the static and fluid values, but also never go over a certain number of characters. This can be nice in making sure that it will scale nicely, but also preserve a better reading experience.\n\n```css\ndiv {\n  width: min(80% - 2rem, 120ch, 1000px);\n}\n```\n\n### max()\n\nmax() has all the same abilities as min(), but it checks for which unit is the largest instead of the smallest. For example if you have `max(800px, 80%)` as the width of a div and view that on a mobile device the div will expand off over the page (unless the div also has a max-wdith of 100% to prevent that).\n\n```css\ndiv {\n  width: max(800px, 80%);\n}\n```\n\n## clamp()\n\nThe clamp() function, unlike min() and max(), requires three values. You set a minimum, preferred, and maximum value. In most cases how this will be used is by setting a static value for the minimum and maximum values and then a fluid unit for the preferred value. The smallest screen size will use the minimum value and then scale up to the maximum value based off of the preferred value. This means that you can use a smaller preferred value to make it scale to the max slower or a higher value to scale to the max sooner.\n\n```css\nh1 {\n  font-size: clamp(1rem, 2vw + 0.6rem, 3rem);\n}\n```\n\nIn the example above I have added `+ 0.6rem` to help it to scale a more linearly and to also help prevent zooming issues. There is a bunch of math to figure out what this number would be for scale but I use this [handy calculator](https://royalfig.github.io/fluid-typography-calculator/).\n\n## Uses\n\n### Fluid type\n\nOne of the most popular uses for clamp, min, and max is to create fluid typography using these functions instead of having to write multiple media queries to cover each viewport size. The clamp example above is a very common fluid type example.\n\nHere is an example of all three being used for fluid type and how they differ.\n\n\u003Ciframe\n  height=\"480\"\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"Min, max, and clamp example on Codepen\"\n  src=\"https://codepen.io/craigwfox/embed/VwQjVyJ?default-tab=html%2Cresult\"\n  frameborder=\"no\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n>\n  See the Pen{\" \"}\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/VwQjVyJ\">\n    min and max example\n  \u003C/a>{\" \"}\n  by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n### Margin and padding\n\nMargin and padding is something else I find myself using clamp for quite often. Similar to fluid type you can had fluid padding which help reduce media queries.\n\n```css\n.container {\n  padding: 2rem clamp(1.5rem, 1rem + 2vw, 2.5rem);\n}\n```\n\n## Final bits\n\nThese CSS functions along with grid and flexbox have allowed me to reduce or eliminate all together many media queries on the sites I build.\n\nYou might also checkout my article about [Responsive / fluid width videos](https://craigwfox.com/posts/responsive-video-embeds/).","src/content/blog/2022-05/fluid-type-and-sizing.mdx","e225d64244dad055","2022-05/fluid-type-and-sizing.mdx","2021-11/methods-for-equal-height-columns",{"id":227,"data":229,"body":238,"filePath":239,"digest":240,"rendered":241,"legacyId":308},{"title":230,"description":231,"postSlug":232,"image":233,"ogImage":234,"ogImageAlt":235,"categories":236,"pubDate":237},"Methods for equal height columns","The different ways I've created equal height columns, since I first started making websites.","methods-for-equal-height-columns/","images/rss/2021-11-equal-height-columns.png","images/twitter/2021-11-equal-height-columns.png","A look at methods for equal height columns",[114],["Date","2021-11-28T00:00:00.000Z"],"\u003Cp class=\"post-note\">\n  Updated for 2021, my original post on this was in 2017 and can be found on \u003Ca href=\"https://codepen.io/craigwfox/post/methods-for-equal-height-columns\">CodePen\u003C/a>.\n\u003C/p>\n\nA few years ago, while looking over a competitor's newly designed website, I saw they were using float and an after pseudo selector to make equal height columns. This got me to thinking about all of the different ways that you can make an equal height column layout.\n\n## Using :after and float\n\nThis is the method I mentioned earlier. It's not something I have used before and is pretty unnecessary now with flex and grid. The purpose of it seems to have been meant more for vertically centering than making the columns equal height.\n\n### Pros\n\n- Columns are equal height\n- The columns have a max height set so they will never get taller than you want and they will scale down vertically as the page narrows.\n\n### Cons\n\n- The height isn't dynamic. If content runs long it will overflow outside of the container.\n- Requires rows so if you want to swap from a 3 column layout to a two column as the browser resizes it requires a decent bit of CSS\n\n### The HTML\n\nThe HTML is a typical grid layout of rows and columns. Very similar to what you would see in older version of Bootstrap.\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n```\n\n### The CSS\n\nFor the CSS you have a row with a clearfix. Then the column will have a `max-height` and the col's &:after pseudo selector has padding 100%.\n\n```css\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n.col {\n  max-height: 300px;\n  float: left;\n  position: relative;\n}\n.col:after {\n  content: \"\";\n  display: block;\n  padding-top: 100%;\n}\n```\n\n### Working Example\n\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - After + Float\" src=\"https://codepen.io/craigwfox/embed/BZRjEo?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/BZRjEo\">\n  Equal Height Columns - After + Float\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n\u003Cp class=\"disclaimer\">Not something I would recommend using anymore, now that flex and gid work everywhere\u003C/p>\n\n## Table-Cell\n\nThis was one of my personal gotos before using starting to use flex and grid. It is fairly easy to work with and at the time I used it had solid browser support in older versions of IE, while I still needed to support that.\n\n### Pros:\n\n- Columns are equal height.\n- Great support/fallback for ie9 (if that something you might still need)\n\n### Cons:\n\n- Like the float method above it requires rows so swapping amounts of columns per row can be an issue. Getting space between background colors of the columns can be a pain, requiring you to make wrappers inside of each column and using padding to make space.\n\n### The HTML\n\nThe HTML is the same as using the :before method.\n\n```html\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"row\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n```\n\n### The CSS\n\nThe CSS is simple. The `.col` class is given the `display: table-cell` property. Then set the width you would like.\n\n```css\n.col {\n  width: 50%;\n  height: 100%;\n\n  display: table-cell;\n}\n```\n\n### Working Example\n\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - table-cell\" src=\"https://codepen.io/craigwfox/embed/VWbKVq?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/VWbKVq\">\n  Equal Height Columns - table-cell\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n\u003Cp class=\"disclaimer\">Not something I would recommend using anymore, now that flex and gid work everywhere\u003C/p>\n\n## Flex\n\n### Pros:\n\n- Equal height columns\n- Can move and reorder content with CSS\n- Doesn't require rows to have multiple rows of columns, so if you need to swap from the number of columns you can by adjusting the widths\n\n### Cons:\n\n- Not really any cons these days. It works in all modern browsers (and even IE 11 with some prefixing and a bit of tweaking here and there)\n\n### The HTML\n\nNo need for a lot of wrappers/containers. We just need a parent wrapping all the columns.\n\n```html\n\u003Cdiv class=\"grid\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n```\n\n### The CSS\n\nOn the parent container, .grid in this case, we will add display: flex and that it's we have equal height columns.\n\n```css\n.grid {\n  display: flex;\n}\n```\n\nThere is a downside here if we want to set a width of say fifty percent and we have four columns it will by default ignore that width and fit all four columns into the same row. To fix this we will add flex-wrap: wrap to the .grid and then we can a width to .col and the 3rd and 4th columns would drop to a second row.\n\n```css\n.grid {\n  display: flex;\n  flex-wrap: wrap;\n}\n.col {\n  width: 50%;\n}\n```\n\n### Working Example\n\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - flexbox\" src=\"https://codepen.io/craigwfox/embed/PjjNBz?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/PjjNBz\">\n  Equal Height Columns - flexbox\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\nFor a more complete guide to flex box check out the [CSS-Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n## Grid\n\n### Pros:\n\n- Tons of options for fine tune control of how the layout works. You can go pretty simple or you can precisely control where each element goes in the grid.\n- Like Flexbox you can rearrange your content with CSS just by swapping the rows / cols (do remember that just because you reorder the elements within the grid, screen readers and tabbing will still follow the order of the HTML not necessarily how the screen renders)\n\n### Cons:\n\n- Not really any cons these days. It works in all modern browsers (and even IE 11 with some prefixing and a bit of tweaking here and there)\n\n### The HTML\n\nNo need for a lot of wrappers/containers. We just need a parent wrapping all the columns.\n\n```html\n\u003Cdiv class=\"grid\">\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n```\n\n### The CSS\n\nThis can be as simple of complex as you want it to be. There are options to set base column and row sizes, but you can also get a specific as you want.\n\n```css\n.grid {\n  display: grid;\n  grid-gap: 20px;\n  grid-auto-rows: minmax(100px, auto);\n  grid-template-columns: 50% 1fr;\n}\n```\n\n### Working Example\n\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - grid\" src=\"https://codepen.io/craigwfox/embed/GEMoMy?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/GEMoMy\">\n  Equal Height Columns - grid\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\nFor a more complete guide to CSS Grid check out [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout) or [CSS-Tricks](https://css-tricks.com/snippets/css/complete-guide-grid/).","src/content/blog/2021-11/methods-for-equal-height-columns.md","fe2718fa82f9569d",{"html":242,"metadata":243},"\u003Cp class=\"post-note\">\n  Updated for 2021, my original post on this was in 2017 and can be found on \u003Ca href=\"https://codepen.io/craigwfox/post/methods-for-equal-height-columns\">CodePen\u003C/a>.\n\u003C/p>\n\u003Cp>A few years ago, while looking over a competitor’s newly designed website, I saw they were using float and an after pseudo selector to make equal height columns. This got me to thinking about all of the different ways that you can make an equal height column layout.\u003C/p>\n\u003Ch2 id=\"using-after-and-float\">Using :after and float\u003C/h2>\n\u003Cp>This is the method I mentioned earlier. It’s not something I have used before and is pretty unnecessary now with flex and grid. The purpose of it seems to have been meant more for vertically centering than making the columns equal height.\u003C/p>\n\u003Ch3 id=\"pros\">Pros\u003C/h3>\n\u003Cul>\n\u003Cli>Columns are equal height\u003C/li>\n\u003Cli>The columns have a max height set so they will never get taller than you want and they will scale down vertically as the page narrows.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"cons\">Cons\u003C/h3>\n\u003Cul>\n\u003Cli>The height isn’t dynamic. If content runs long it will overflow outside of the container.\u003C/li>\n\u003Cli>Requires rows so if you want to swap from a 3 column layout to a two column as the browser resizes it requires a decent bit of CSS\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"the-html\">The HTML\u003C/h3>\n\u003Cp>The HTML is a typical grid layout of rows and columns. Very similar to what you would see in older version of Bootstrap.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>row\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>row\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-css\">The CSS\u003C/h3>\n\u003Cp>For the CSS you have a row with a clearfix. Then the column will have a \u003Ccode>max-height\u003C/code> and the col’s &#x26;:after pseudo selector has padding 100%.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.row:after\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">content\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token string\">\"\"\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> table\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">clear\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> both\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token selector\">.col\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">max-height\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 300px\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">float\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> left\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">position\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> relative\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token selector\">.col:after\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">content\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token string\">\"\"\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> block\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">padding-top\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"working-example\">Working Example\u003C/h3>\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - After + Float\" src=\"https://codepen.io/craigwfox/embed/BZRjEo?default-tab=result&#x26;theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/BZRjEo\">\n  Equal Height Columns - After + Float&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Cp class=\"disclaimer\">Not something I would recommend using anymore, now that flex and gid work everywhere\u003C/p>\n\u003Ch2 id=\"table-cell\">Table-Cell\u003C/h2>\n\u003Cp>This was one of my personal gotos before using starting to use flex and grid. It is fairly easy to work with and at the time I used it had solid browser support in older versions of IE, while I still needed to support that.\u003C/p>\n\u003Ch3 id=\"pros-1\">Pros:\u003C/h3>\n\u003Cul>\n\u003Cli>Columns are equal height.\u003C/li>\n\u003Cli>Great support/fallback for ie9 (if that something you might still need)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"cons-1\">Cons:\u003C/h3>\n\u003Cul>\n\u003Cli>Like the float method above it requires rows so swapping amounts of columns per row can be an issue. Getting space between background colors of the columns can be a pain, requiring you to make wrappers inside of each column and using padding to make space.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"the-html-1\">The HTML\u003C/h3>\n\u003Cp>The HTML is the same as using the :before method.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>row\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>row\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-css-1\">The CSS\u003C/h3>\n\u003Cp>The CSS is simple. The \u003Ccode>.col\u003C/code> class is given the \u003Ccode>display: table-cell\u003C/code> property. Then set the width you would like.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.col\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 50%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">height\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> table-cell\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"working-example-1\">Working Example\u003C/h3>\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - table-cell\" src=\"https://codepen.io/craigwfox/embed/VWbKVq?default-tab=result&#x26;theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/VWbKVq\">\n  Equal Height Columns - table-cell&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Cp class=\"disclaimer\">Not something I would recommend using anymore, now that flex and gid work everywhere\u003C/p>\n\u003Ch2 id=\"flex\">Flex\u003C/h2>\n\u003Ch3 id=\"pros-2\">Pros:\u003C/h3>\n\u003Cul>\n\u003Cli>Equal height columns\u003C/li>\n\u003Cli>Can move and reorder content with CSS\u003C/li>\n\u003Cli>Doesn’t require rows to have multiple rows of columns, so if you need to swap from the number of columns you can by adjusting the widths\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"cons-2\">Cons:\u003C/h3>\n\u003Cul>\n\u003Cli>Not really any cons these days. It works in all modern browsers (and even IE 11 with some prefixing and a bit of tweaking here and there)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"the-html-2\">The HTML\u003C/h3>\n\u003Cp>No need for a lot of wrappers/containers. We just need a parent wrapping all the columns.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>grid\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-css-2\">The CSS\u003C/h3>\n\u003Cp>On the parent container, .grid in this case, we will add display: flex and that it’s we have equal height columns.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.grid\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> flex\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>There is a downside here if we want to set a width of say fifty percent and we have four columns it will by default ignore that width and fit all four columns into the same row. To fix this we will add flex-wrap: wrap to the .grid and then we can a width to .col and the 3rd and 4th columns would drop to a second row.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.grid\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> flex\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">flex-wrap\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> wrap\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token selector\">.col\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 50%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"working-example-2\">Working Example\u003C/h3>\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - flexbox\" src=\"https://codepen.io/craigwfox/embed/PjjNBz?default-tab=result&#x26;theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/PjjNBz\">\n  Equal Height Columns - flexbox&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Cp>For a more complete guide to flex box check out the \u003Ca href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">CSS-Tricks guide\u003C/a>\u003C/p>\n\u003Ch2 id=\"grid\">Grid\u003C/h2>\n\u003Ch3 id=\"pros-3\">Pros:\u003C/h3>\n\u003Cul>\n\u003Cli>Tons of options for fine tune control of how the layout works. You can go pretty simple or you can precisely control where each element goes in the grid.\u003C/li>\n\u003Cli>Like Flexbox you can rearrange your content with CSS just by swapping the rows / cols (do remember that just because you reorder the elements within the grid, screen readers and tabbing will still follow the order of the HTML not necessarily how the screen renders)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"cons-3\">Cons:\u003C/h3>\n\u003Cul>\n\u003Cli>Not really any cons these days. It works in all modern browsers (and even IE 11 with some prefixing and a bit of tweaking here and there)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"the-html-3\">The HTML\u003C/h3>\n\u003Cp>No need for a lot of wrappers/containers. We just need a parent wrapping all the columns.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>grid\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-css-3\">The CSS\u003C/h3>\n\u003Cp>This can be as simple of complex as you want it to be. There are options to set base column and row sizes, but you can also get a specific as you want.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.grid\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> grid\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">grid-gap\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 20px\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">grid-auto-rows\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">minmax\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>100px\u003Cspan class=\"token punctuation\">,\u003C/span> auto\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">grid-template-columns\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 50% 1fr\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"working-example-3\">Working Example\u003C/h3>\n\u003Ciframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"Equal Height Columns - grid\" src=\"https://codepen.io/craigwfox/embed/GEMoMy?default-tab=result&#x26;theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/GEMoMy\">\n  Equal Height Columns - grid&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Cp>For a more complete guide to CSS Grid check out \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">MDN\u003C/a> or \u003Ca href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">CSS-Tricks\u003C/a>.\u003C/p>",{"headings":244,"imagePaths":304,"frontmatter":305},[245,248,251,254,257,260,263,266,269,272,274,276,278,281,283,285,287,289,291,294,296,298,300,302],{"depth":97,"slug":246,"text":247},"using-after-and-float","Using :after and float",{"depth":144,"slug":249,"text":250},"pros","Pros",{"depth":144,"slug":252,"text":253},"cons","Cons",{"depth":144,"slug":255,"text":256},"the-html","The HTML",{"depth":144,"slug":258,"text":259},"the-css","The CSS",{"depth":144,"slug":261,"text":262},"working-example","Working Example",{"depth":97,"slug":264,"text":265},"table-cell","Table-Cell",{"depth":144,"slug":267,"text":268},"pros-1","Pros:",{"depth":144,"slug":270,"text":271},"cons-1","Cons:",{"depth":144,"slug":273,"text":256},"the-html-1",{"depth":144,"slug":275,"text":259},"the-css-1",{"depth":144,"slug":277,"text":262},"working-example-1",{"depth":97,"slug":279,"text":280},"flex","Flex",{"depth":144,"slug":282,"text":268},"pros-2",{"depth":144,"slug":284,"text":271},"cons-2",{"depth":144,"slug":286,"text":256},"the-html-2",{"depth":144,"slug":288,"text":259},"the-css-2",{"depth":144,"slug":290,"text":262},"working-example-2",{"depth":97,"slug":292,"text":293},"grid","Grid",{"depth":144,"slug":295,"text":268},"pros-3",{"depth":144,"slug":297,"text":271},"cons-3",{"depth":144,"slug":299,"text":256},"the-html-3",{"depth":144,"slug":301,"text":259},"the-css-3",{"depth":144,"slug":303,"text":262},"working-example-3",[],{"tags":209,"categories":306,"postSlug":232,"pubDate":307,"title":230,"description":231,"image":233,"ogImage":234,"ogImageAlt":235},[114],["Date","2021-11-28T00:00:00.000Z"],"2021-11/methods-for-equal-height-columns.md","2022-02/responsive-video-embeds",{"id":309,"data":311,"body":322,"filePath":323,"digest":324,"rendered":325,"legacyId":360},{"title":312,"description":313,"postSlug":314,"image":315,"ogImage":316,"ogImageAlt":317,"categories":318,"pubDate":321},"Responsive / fluid width videos","A look at how responsive videos have been done in the past and how we can do them now.","responsive-video-embeds/","images/rss/2022-02-responsive-videos.png","images/twitter/2022-02-responsive-videos.png","Learn about responsive videos",[114,319,320],"Web history\"","Old vs new",["Date","2022-02-07T00:00:00.000Z"],"## How I've done responsive videos in the past\n\nIn the past I've used a couple of different methods to achieve responsive videos:\n\n- The first thing I used often was a jQuery plugin called [FitVids.js](http://fitvidsjs.com/).\n- Later I swapped to using CSS only version like [Bootstrap](https://getbootstrap.com/docs/4.6/utilities/embed/) uses.\n\nAt the end of the day both of these methods are achieving the same thing using similar HTML and CSS. The major difference between is how they add the HTML to the page. FitVids injects the HTML and CSS into the page using Javascript, while Bootstrap requires you to manually add the embed wrapper to each video (this can also be automated in most content management systems).\n\n### The HTML\n\nThe HTML for both is pretty straightforward you have wrapper div and an iframe. In bootstrap the iframe would need a class added to it while FitVids handled this.\n\n```html\n\u003Cdiv class=\"wrapper\">\n  \u003Ciframe src=\"...\">\u003C/iframe>\n\u003C/div>\n```\n\n### The CSS\n\nAs with the HTML the CSS between the two is very similar.\n\n#### First you have the wrapper class\n\n- **Width** - The width is set to `100%`, this makes the container fill the space, but also makes it shrink. If need you could also set a max-width to keep the video from getting too wide.\n- **Display** - The display is set to `block`, this is here for when the wrapper isn't a block level element. An inline level element would end up being 0px tall because the padding that is added in a later stage wouldn't apply.\n- **Position** - The position is set to `relative`. The iframe is being set to absolute so this keep the iframe relative to it's parent.\n- **Overflow** - The overflow is set to `hidden`. This prevents the video from overflowing the parent, in theory this shouldn't be needed as long as the aspect ratio of the video is right and FitVids actually omits it.\n- **Padding** - The padding is set to `0`. This clears any padding from the wrapper, because any padding on the parent would throw off the resizing of the video.\n\n```css\n.wrapper {\n  width: 100%;\n  display: block;\n  position: relative;\n  overflow: hidden;\n  padding: 0;\n}\n```\n\n#### The iframe styles\n\n- **Width and height:** The width and height are set to `100%` to make the iframe match the parent containers height and width.\n- **Position:** The position is set to `absolute` and the top, bottom, left, and right to `0` (today you could do this using `inset: 0` instead).\n\n```css\niframe {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n}\n```\n\n#### Setting the aspect ratio\n\nThis is where the real magic of it happens. You would set either the top padding of the wrapper (FitVids) or a psuedo selector of the parent (Bootstrap) to a value relating to the aspect ratio of the video. For this example I'm going to use a value of `56.25%`, since the video is 16x9 (to learn how to find this value you can read this [A list apart article by Thierry Koblentz](https://alistapart.com/article/creating-intrinsic-ratios-for-video/)).\n\n- **Content:** This is required for a pseudo element show in the page at all.\n- **Display block:** This makes sure the pseudo element works as a block level element, if you were to leave it as an inline element the top padding would have no effect.\n- **Padding top:** This is where the padding value based on the aspect ratio is added.\n\n```css\n.wrapper::before {\n  content: \"\";\n  display: block;\n  padding-top: 56.25%;\n}\n```\n\n## How I manage responsive videos now\n\nToday we have the CSS properties [aspect-ratio](https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio) and [object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) that make this much simpler to manage.\n\n### HTML\n\nThe HTML can be pretty simple. I'd suggest adding a class to iframes that you want to be responsive (I'd probably avoid globally adding it to all iframes, just incase there are embeds you don't want working this way).\n\n```html\n\u003Ciframe class=\"responsive-video\" src=\"...\">\u003C/iframe>\n```\n\n### CSS\n\nThe CSS in this method is quite a bit more clear.\n\n- **Width and height** - The width and height are still set to `100%`. This makes the iframe try to be as wide and tall as possible.\n- **Aspect ratio** - The aspect-ratio is set to `16 / 9` prevents the width and height from stretching the video beyond the 16:9 aspect ratio, which would result is blank space in the iframe. Additionally you can set the aspect ratio to whatever ratio you want.\n- **Object fit** - The object-fit is set to `contain` this makes the iframe try and expand to the largest width and height that it can without clipping outside it's parent bounds.\n\n```css\n.responsive-video {\n  width: 100%;\n  height: 100%;\n\n  aspect-ratio: 16 / 9;\n  object-fit: contain;\n}\n```\n\n### Working example\n\n\u003Ciframe height=\"375\" style=\"width: 100%;\" scrolling=\"no\" title=\"Responsive video\" src=\"https://codepen.io/craigwfox/embed/qBVRXJZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/qBVRXJZ\">\n  Responsive video\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n### Additional improvements\n\nNot all videos will be 16:9 so you could add some additional class to cover more aspect ratios.\n\n```css\n.responsive-video {\n  width: 100%;\n  height: 100%;\n\n  aspect-ratio: 16 / 9;\n  object-fit: contain;\n}\n\n.responsive-video--4x3 {\n  aspect-ratio: 4 / 3;\n}\n\n.responsive-video--1x1 {\n  aspect-ratio: 1 / 1;\n}\n```","src/content/blog/2022-02/responsive-video-embeds.md","5599bcbc9870ba43",{"html":326,"metadata":327},"\u003Ch2 id=\"how-ive-done-responsive-videos-in-the-past\">How I’ve done responsive videos in the past\u003C/h2>\n\u003Cp>In the past I’ve used a couple of different methods to achieve responsive videos:\u003C/p>\n\u003Cul>\n\u003Cli>The first thing I used often was a jQuery plugin called \u003Ca href=\"http://fitvidsjs.com/\">FitVids.js\u003C/a>.\u003C/li>\n\u003Cli>Later I swapped to using CSS only version like \u003Ca href=\"https://getbootstrap.com/docs/4.6/utilities/embed/\">Bootstrap\u003C/a> uses.\u003C/li>\n\u003C/ul>\n\u003Cp>At the end of the day both of these methods are achieving the same thing using similar HTML and CSS. The major difference between is how they add the HTML to the page. FitVids injects the HTML and CSS into the page using Javascript, while Bootstrap requires you to manually add the embed wrapper to each video (this can also be automated in most content management systems).\u003C/p>\n\u003Ch3 id=\"the-html\">The HTML\u003C/h3>\n\u003Cp>The HTML for both is pretty straightforward you have wrapper div and an iframe. In bootstrap the iframe would need a class added to it while FitVids handled this.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>wrapper\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>iframe\u003C/span> \u003Cspan class=\"token attr-name\">src\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>...\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>iframe\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"the-css\">The CSS\u003C/h3>\n\u003Cp>As with the HTML the CSS between the two is very similar.\u003C/p>\n\u003Ch4 id=\"first-you-have-the-wrapper-class\">First you have the wrapper class\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Width\u003C/strong> - The width is set to \u003Ccode>100%\u003C/code>, this makes the container fill the space, but also makes it shrink. If need you could also set a max-width to keep the video from getting too wide.\u003C/li>\n\u003Cli>\u003Cstrong>Display\u003C/strong> - The display is set to \u003Ccode>block\u003C/code>, this is here for when the wrapper isn’t a block level element. An inline level element would end up being 0px tall because the padding that is added in a later stage wouldn’t apply.\u003C/li>\n\u003Cli>\u003Cstrong>Position\u003C/strong> - The position is set to \u003Ccode>relative\u003C/code>. The iframe is being set to absolute so this keep the iframe relative to it’s parent.\u003C/li>\n\u003Cli>\u003Cstrong>Overflow\u003C/strong> - The overflow is set to \u003Ccode>hidden\u003C/code>. This prevents the video from overflowing the parent, in theory this shouldn’t be needed as long as the aspect ratio of the video is right and FitVids actually omits it.\u003C/li>\n\u003Cli>\u003Cstrong>Padding\u003C/strong> - The padding is set to \u003Ccode>0\u003C/code>. This clears any padding from the wrapper, because any padding on the parent would throw off the resizing of the video.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.wrapper\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> block\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">position\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> relative\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">overflow\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> hidden\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">padding\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 0\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch4 id=\"the-iframe-styles\">The iframe styles\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Width and height:\u003C/strong> The width and height are set to \u003Ccode>100%\u003C/code> to make the iframe match the parent containers height and width.\u003C/li>\n\u003Cli>\u003Cstrong>Position:\u003C/strong> The position is set to \u003Ccode>absolute\u003C/code> and the top, bottom, left, and right to \u003Ccode>0\u003C/code> (today you could do this using \u003Ccode>inset: 0\u003C/code> instead).\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">iframe\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">height\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">position\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> absolute\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">top\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 0\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">bottom\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 0\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">left\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 0\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch4 id=\"setting-the-aspect-ratio\">Setting the aspect ratio\u003C/h4>\n\u003Cp>This is where the real magic of it happens. You would set either the top padding of the wrapper (FitVids) or a psuedo selector of the parent (Bootstrap) to a value relating to the aspect ratio of the video. For this example I’m going to use a value of \u003Ccode>56.25%\u003C/code>, since the video is 16x9 (to learn how to find this value you can read this \u003Ca href=\"https://alistapart.com/article/creating-intrinsic-ratios-for-video/\">A list apart article by Thierry Koblentz\u003C/a>).\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Content:\u003C/strong> This is required for a pseudo element show in the page at all.\u003C/li>\n\u003Cli>\u003Cstrong>Display block:\u003C/strong> This makes sure the pseudo element works as a block level element, if you were to leave it as an inline element the top padding would have no effect.\u003C/li>\n\u003Cli>\u003Cstrong>Padding top:\u003C/strong> This is where the padding value based on the aspect ratio is added.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.wrapper::before\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">content\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token string\">\"\"\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> block\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">padding-top\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 56.25%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"how-i-manage-responsive-videos-now\">How I manage responsive videos now\u003C/h2>\n\u003Cp>Today we have the CSS properties \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio\">aspect-ratio\u003C/a> and \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\">object-fit\u003C/a> that make this much simpler to manage.\u003C/p>\n\u003Ch3 id=\"html\">HTML\u003C/h3>\n\u003Cp>The HTML can be pretty simple. I’d suggest adding a class to iframes that you want to be responsive (I’d probably avoid globally adding it to all iframes, just incase there are embeds you don’t want working this way).\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>iframe\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>responsive-video\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">src\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>...\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>iframe\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"css\">CSS\u003C/h3>\n\u003Cp>The CSS in this method is quite a bit more clear.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Width and height\u003C/strong> - The width and height are still set to \u003Ccode>100%\u003C/code>. This makes the iframe try to be as wide and tall as possible.\u003C/li>\n\u003Cli>\u003Cstrong>Aspect ratio\u003C/strong> - The aspect-ratio is set to \u003Ccode>16 / 9\u003C/code> prevents the width and height from stretching the video beyond the 16:9 aspect ratio, which would result is blank space in the iframe. Additionally you can set the aspect ratio to whatever ratio you want.\u003C/li>\n\u003Cli>\u003Cstrong>Object fit\u003C/strong> - The object-fit is set to \u003Ccode>contain\u003C/code> this makes the iframe try and expand to the largest width and height that it can without clipping outside it’s parent bounds.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.responsive-video\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">height\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token property\">aspect-ratio\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 16 / 9\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">object-fit\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> contain\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"working-example\">Working example\u003C/h3>\n\u003Ciframe height=\"375\" style=\"width: 100%;\" scrolling=\"no\" title=\"Responsive video\" src=\"https://codepen.io/craigwfox/embed/qBVRXJZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen &#x3C;a href=\"https://codepen.io/craigwfox/pen/qBVRXJZ\">\n  Responsive video&#x3C;/a> by Craig Fox (&#x3C;a href=\"https://codepen.io/craigwfox\">@craigwfox&#x3C;/a>)\n  on &#x3C;a href=\"https://codepen.io\">CodePen&#x3C;/a>.\n\u003C/iframe>\n\u003Ch3 id=\"additional-improvements\">Additional improvements\u003C/h3>\n\u003Cp>Not all videos will be 16:9 so you could add some additional class to cover more aspect ratios.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.responsive-video\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">width\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">height\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 100%\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token property\">aspect-ratio\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 16 / 9\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">object-fit\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> contain\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">.responsive-video--4x3\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">aspect-ratio\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 4 / 3\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">.responsive-video--1x1\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">aspect-ratio\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 1 / 1\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>",{"headings":328,"imagePaths":356,"frontmatter":357},[329,332,333,334,337,340,343,346,349,351,353],{"depth":97,"slug":330,"text":331},"how-ive-done-responsive-videos-in-the-past","How I’ve done responsive videos in the past",{"depth":144,"slug":255,"text":256},{"depth":144,"slug":258,"text":259},{"depth":151,"slug":335,"text":336},"first-you-have-the-wrapper-class","First you have the wrapper class",{"depth":151,"slug":338,"text":339},"the-iframe-styles","The iframe styles",{"depth":151,"slug":341,"text":342},"setting-the-aspect-ratio","Setting the aspect ratio",{"depth":97,"slug":344,"text":345},"how-i-manage-responsive-videos-now","How I manage responsive videos now",{"depth":144,"slug":347,"text":348},"html","HTML",{"depth":144,"slug":221,"text":350},"CSS",{"depth":144,"slug":261,"text":352},"Working example",{"depth":144,"slug":354,"text":355},"additional-improvements","Additional improvements",[],{"tags":209,"categories":358,"postSlug":314,"pubDate":359,"title":312,"description":313,"image":315,"ogImage":316,"ogImageAlt":317},[114,319,320],["Date","2022-02-07T00:00:00.000Z"],"2022-02/responsive-video-embeds.md","2022-08/where-is-and-has",{"id":361,"data":363,"body":372,"filePath":373,"digest":374,"legacyId":375,"deferredRender":33},{"title":364,"description":365,"postSlug":366,"image":367,"ogImage":367,"ogImageAlt":368,"categories":369,"pubDate":371},"Using the where(), is(), and has() CSS pseudo classes","An overview of how the where(), is(), and has() pseudo classes work and examples of different ways to utilize them in your day to day work.","where-is-and-has/","images/twitter/2022-05-13-where-is-and-has.png","An overview of how the where(), is(), and has() pseudo classes work and examples of different ways to utilize them in your day to day work",[114,221,370],"guide",["Date","2022-08-02T00:00:00.000Z"],"import CssHotness from \"../../../components/CssHotness.vue\"\n\n# Using the where(), is(), and has() CSS pseudo classes\n\nWith the has() pseudo classing rolling out to browsers I've seen more talking about pseudo classes and ways to utilize them. To help myself better understand them I want to go over a few of the more recent ones, where(), is(), and has().\n\n\u003CCssHotness curPost=\"2\" />\n\n## where() and is()\n\nWhere() and is() are both pseudo classes that function almost identically. Both where() and is() take a list of selectors and then apply classes to the those selectors or to children under them.\n\n```css\n/* How we used to do this */\n.post p,\n.content p,\nfooter p {\n\tcolor blue\n}\n\n/* How it can be writtern now */\n:where(.post, .content, footer) p {\n\tcolor: blue;\n}\n\n```\n\nThe difference in the two comes down to specificity. **where()** has **0** specificity and **is()** has the same specificity as the most specific item in the selector list.\n\n### :where() example\n\n:where()'s lack of specificity makes it a prime candidate for reset styles. You can see in this example that `.article p` overwrites the base `:where()` styles.\n\n\u003Ciframe\n  height=\"500\"\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"Example of using :where()\"\n  src=\"https://codepen.io/craigwfox/embed/JjLbjoV?default-tab=css%2Cresult\"\n  frameborder=\"no\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n>\n  See the Pen{\" \"}\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/JjLbjoV\">Untitled\u003C/a> by\n  Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>) on{\" \"}\n  \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n**Note** if you declare the `:where` block after declaring `footer p` the where will take specificity. Since element selectors have **0** specificity.\n\n### :is() usage\n\n:is() on the other hand can be a bit more tricky to override. In this example you will notice that `.article p` overwrites the base `:where()` styles, but `footer p` does not. That is because the `:is() ` block takes the specificity level of the **most specific selector** in the selector list.\n\n\u003Ciframe\n  height=\"500\"\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"Example of using :is()\"\n  src=\"https://codepen.io/craigwfox/embed/rNdWNLq?default-tab=css%2Cresult&theme-id=dark\"\n  frameborder=\"no\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n>\n  See the Pen{\" \"}\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/rNdWNLq\">Untitled\u003C/a> by\n  Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>) on{\" \"}\n  \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\nIn this case the most specific selector in the list is `.article p`. It is the more specific than `footer p` in the list because class selectors have more specificity than element selectors. Then it is also more specific than `.main p` since it comes second in the list.\n\n## has()\n\nFor a long time people have been asking for a way to select an elements parent in CSS. For quite a while doing so would involve using JavaScript to find the element in question and then select its parentNode. Now you can (mostly) do this instead use has() in CSS.\n\nTo use has() you select an element/class and then check to see if a child/class/condition exists within it. In its simplest form you can for example check a section tag to see if a h2 is inside of it and if so make that background a different color than other section tags.\n\n```css\nsection {\n  background: red;\n}\n\nsection:has(h2) {\n  background: blue;\n}\n```\n\nIt's also possible to make more complex selectors by using other pseudo class. In this codepen example, I'm watching for when an a tag is hovered within a section and then am changing the background and text color.\n\n\u003Ciframe\n  height=\"500\"\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"has() example\"\n  src=\"https://codepen.io/craigwfox/embed/JjLpGzr?default-tab=css%2Cresult\"\n  frameborder=\"no\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n>\n  See the Pen{\" \"}\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/JjLpGzr\">has() example\u003C/a>{\" \"}\n  by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n\u003Cp class=\"post-note\">\n  This example doesn't currently work in Firefox.\n\u003C/p>\n\nIt's also possible to get even more crazy and do something such as Dave Rupert's solution to [styling dangling elements](https://daverupert.com/2022/07/solving-the-dangler-conundrum-with-has-and-container-queries/).\n\n### Compatibility\n\nA downside for has() is that it is still pretty new and only now starting to roll out into browsers. Currently only Chrome desktop and Safari (Desktop and iOS) support it without flags.\n\n| Firefox | Chrome  | Edge | Safari | iOS   | Chrome Android | Firefox Android |\n| ------- | ------- | ---- | ------ | ----- | -------------- | --------------- |\n| None    | 105-106 | None | 15.4+  | 15.4+ | None           | None            |\n\n#### Full compatibility charts\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/:has#browser_compatibility) | [Can I Use](https://caniuse.com/css-has)","src/content/blog/2022-08/where-is-and-has.mdx","ed380f58b2d9a4a0","2022-08/where-is-and-has.mdx","2022-11/using-aspect-ratio",{"id":376,"data":378,"body":387,"filePath":388,"digest":389,"legacyId":390,"deferredRender":33},{"title":379,"description":380,"postSlug":381,"image":382,"ogImage":382,"ogImageAlt":383,"categories":384,"pubDate":386},"CSS aspect-ratio and some everyday uses for it","CSS aspect-ratio has been working in browser for a couple of years now and I want to share some ways that I frequently utilize it in my day to day work.","using-aspect-ratio/","images/twitter/2022-11-03-aspect-ratio.png","Using CSS aspect-ratio",[114,385,221],"2022 css",["Date","2022-11-03T00:00:00.000Z"],"import CssHotness from \"../../../components/CssHotness.vue\"\n\nCSS aspect-ratio has been working in browser for a couple of years now and I want to share some ways that I frequently utilize it in my day to day work.\n\n\u003CCssHotness curPost=\"3\" />\n\n## Image sizing\n\nI most often find myself reaching for aspect-ratio to size images in combination with object-fit. It can be useful to keep images sized similarly between different items in a grid of content (at least until subgrid works everywhere).\n\n### Example of a figure/caption\n\nIn this example I have a figure and caption. The figure is using a grid layout that limits the width of the image and then the image has an aspect-ratio of 1 which will keep is square.\n\n\u003Ciframe\n  height=\"500\"\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"Aspect ratio with images\"\n  src=\"https://codepen.io/craigwfox/embed/mdKEVKL?default-tab=result&theme-id=dark\"\n  frameborder=\"no\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n>\n  See the Pen\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/mdKEVKL\">\n    Aspect ratio with images\n  \u003C/a>\n  by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\n## Video sizing\n\nAnother frequent use I find for aspect-ratio is to make videos embeds (specifically iframes from viemo/youtube) responsive. This requires fairly minimal CSS. You need to set the width and height to 100%, then set the aspect-ratio to match the video (in this case 16 by 9), and then `object-fit: contain`, this will keep the image the correct ratio and allow it to resize.\n\n```css\n.responsive-video {\n  width: 100%;\n  height: 100%;\n  aspect-ratio: 16 / 9;\n  object-fit: contain;\n}\n```\n\n### Example of a responsive video\n\n\u003Ciframe\n  style=\"width: 100%;\"\n  scrolling=\"no\"\n  title=\"Responsive video\"\n  src=\"https://codepen.io/craigwfox/embed/qBVRXJZ?default-tab=html%2Cresult\"\n  loading=\"lazy\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n  height=\"500\"\n  frameborder=\"no\"\n>\n  See the Pen{\" \"}\n  \u003Ca href=\"https://codepen.io/craigwfox/pen/qBVRXJZ\">\n    Responsive video\n  \u003C/a>{\" \"}\n  by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\n\u003C/iframe>\n\nI've got a longer post on just [responsive videos](https://craigwfox.com/posts/responsive-video-embeds/) and some history on how they used to be done.","src/content/blog/2022-11/using-aspect-ratio.mdx","0bab5ae8dd483040","2022-11/using-aspect-ratio.mdx","2023-01/css-auto-grid-columns",{"id":391,"data":393,"body":405,"filePath":406,"digest":407,"rendered":408,"legacyId":435},{"title":394,"description":395,"postSlug":396,"image":397,"ogImage":397,"ogImageAlt":398,"categories":399,"codepenScripts":402,"pubDate":404},"Using CSS Grid auto-fit/auto-fill to create dynamic columns","A way to use CSS grid to create auto flowing columns and layers that let's us remove the need for many media queries, resulting in cleaner and more maintainable stylesheets.","css-auto-grid-columns/","images/twitter/2023-01-18-css-auto-columns.png","Auto flowing columns using CSS grid",[114,221,400,401],"css grid","grid layout",[403],"https://cpwebassets.codepen.io/assets/embed/ei.js",["Date","2023-01-18T00:00:00.000Z"],"I'm sure that many are familiar with using the [Flexbox Albatross](https://heydonworks.com/article/the-flexbox-holy-albatross/) to achieve wrapping columns on smaller screens without needing write a media query. Jonathan Snook has actually modified this and created a [grid version](https://codepen.io/snookca/pen/PoYVLRW) version of this.\n\nWhat I'm wanting to setup is an auto filling grid that doesn't require media queries and can support having some of it's elements be full width.\n\n\u003Cdiv class=\"post-image post-image--lg post-image--bright\">\n\u003Cimg src=\"/images/posts/2023-01/css-auto-columns/single-to-columns-example.png\" alt=\"Example of going from a single column to multiple columns and rows\" />\n\u003C/div>\n\n## HTML Setup\n\nFor the HTML you will need a parent for the grid and then your child columns inside of it. You can then add classes for the modifiers you would like, for this example I am using a full width option and an 2x option.\n\n```html\n\u003Cdiv class=\"grid\">\n  \u003Cdiv class=\"col col--full\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n  \u003Cdiv class=\"col\">...\u003C/div>\n\u003C/div>\n```\n\n## CSS Setup\n\n### Base grid setup\n\nFirst we will setup the base grid for the parent wrapper. For this we will use the repeat() function and set the repeat count to [auto-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat#auto-fit), I am using auto-fit because I want the columns to grow to fill the available space, if you don't want them to grow to fill the space then use auto-fill.\n\nThen we will set the tracks, or sizing, using the minmax function. The first size will be 15rem, which will be the minimum size we want the column to be. The second value will be 1fr, which will make all the columns be equal widths.\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\n}\n```\n\n### Column sizing\n\nNow we style the full width modifier class to start at column **1** and end at **-1**. In this case negative one means that it ends at the last column, which is helpful in cases like this where the last column will be variable / unknown.\n\n```css\n.col--full {\n  grid-column: 1 / -1;\n}\n```\n\n## Example\n\nHere's the code in action. You can make any column be full width, by adding the `col--full` class.\n\n\u003Cp class=\"codepen\" data-height=\"500\" data-default-tab=\"html\" data-slug-hash=\"KKeWywO\" data-user=\"craigwfox\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\u003Cspan>See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/KKeWywO/c9543b36266207cf5425a72285e821f1\">Grid auto columns with variable sizes\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>) on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\u003C/span>\u003C/p>\n\n## Closing thoughts\n\nThis won't work for everything out there but it's a handy tool to have in your grid layout toolkit. For some other layout techniques checkout my previous post on [Methods for equal height columns](https://craigwfox.com/posts/2021-11/methods-for-equal-height-columns/)","src/content/blog/2023-01/css-auto-grid-columns.md","d097980ce4db9c19",{"html":409,"metadata":410},"\u003Cp>I’m sure that many are familiar with using the \u003Ca href=\"https://heydonworks.com/article/the-flexbox-holy-albatross/\">Flexbox Albatross\u003C/a> to achieve wrapping columns on smaller screens without needing write a media query. Jonathan Snook has actually modified this and created a \u003Ca href=\"https://codepen.io/snookca/pen/PoYVLRW\">grid version\u003C/a> version of this.\u003C/p>\n\u003Cp>What I’m wanting to setup is an auto filling grid that doesn’t require media queries and can support having some of it’s elements be full width.\u003C/p>\n\u003Cdiv class=\"post-image post-image--lg post-image--bright\">\n\u003Cimg src=\"/images/posts/2023-01/css-auto-columns/single-to-columns-example.png\" alt=\"Example of going from a single column to multiple columns and rows\">\n\u003C/div>\n\u003Ch2 id=\"html-setup\">HTML Setup\u003C/h2>\n\u003Cp>For the HTML you will need a parent for the grid and then your child columns inside of it. You can then add classes for the modifiers you would like, for this example I am using a full width option and an 2x option.\u003C/p>\n\u003Cpre class=\"language-html\" data-language=\"html\">\u003Ccode is:raw=\"\" class=\"language-html\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>grid\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col col--full\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n  \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>col\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>...\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"css-setup\">CSS Setup\u003C/h2>\n\u003Ch3 id=\"base-grid-setup\">Base grid setup\u003C/h3>\n\u003Cp>First we will setup the base grid for the parent wrapper. For this we will use the repeat() function and set the repeat count to \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/repeat#auto-fit\">auto-fit\u003C/a>, I am using auto-fit because I want the columns to grow to fill the available space, if you don’t want them to grow to fill the space then use auto-fill.\u003C/p>\n\u003Cp>Then we will set the tracks, or sizing, using the minmax function. The first size will be 15rem, which will be the minimum size we want the column to be. The second value will be 1fr, which will make all the columns be equal widths.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.grid\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">display\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> grid\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token property\">grid-template-columns\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">repeat\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>auto-fit\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token function\">minmax\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>15rem\u003Cspan class=\"token punctuation\">,\u003C/span> 1fr\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3 id=\"column-sizing\">Column sizing\u003C/h3>\n\u003Cp>Now we style the full width modifier class to start at column \u003Cstrong>1\u003C/strong> and end at \u003Cstrong>-1\u003C/strong>. In this case negative one means that it ends at the last column, which is helpful in cases like this where the last column will be variable / unknown.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">.col--full\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">grid-column\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> 1 / -1\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"example\">Example\u003C/h2>\n\u003Cp>Here’s the code in action. You can make any column be full width, by adding the \u003Ccode>col--full\u003C/code> class.\u003C/p>\n\u003Cp class=\"codepen\" data-height=\"500\" data-default-tab=\"html\" data-slug-hash=\"KKeWywO\" data-user=\"craigwfox\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\u003Cspan>See the Pen \u003Ca href=\"https://codepen.io/craigwfox/pen/KKeWywO/c9543b36266207cf5425a72285e821f1\">Grid auto columns with variable sizes\u003C/a> by Craig Fox (\u003Ca href=\"https://codepen.io/craigwfox\">@craigwfox\u003C/a>) on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\u003C/span>\u003C/p>\n\u003Ch2 id=\"closing-thoughts\">Closing thoughts\u003C/h2>\n\u003Cp>This won’t work for everything out there but it’s a handy tool to have in your grid layout toolkit. For some other layout techniques checkout my previous post on \u003Ca href=\"https://craigwfox.com/posts/2021-11/methods-for-equal-height-columns/\">Methods for equal height columns\u003C/a>\u003C/p>",{"headings":411,"imagePaths":430,"frontmatter":431},[412,415,418,421,424,427],{"depth":97,"slug":413,"text":414},"html-setup","HTML Setup",{"depth":97,"slug":416,"text":417},"css-setup","CSS Setup",{"depth":144,"slug":419,"text":420},"base-grid-setup","Base grid setup",{"depth":144,"slug":422,"text":423},"column-sizing","Column sizing",{"depth":97,"slug":425,"text":426},"example","Example",{"depth":97,"slug":428,"text":429},"closing-thoughts","Closing thoughts",[],{"tags":209,"categories":432,"postSlug":396,"pubDate":433,"title":394,"description":395,"image":397,"ogImage":397,"ogImageAlt":398,"codepenScripts":434},[114,221,400,401],["Date","2023-01-18T00:00:00.000Z"],[403],"2023-01/css-auto-grid-columns.md","2023-12/css-cascade-layers-and-important",{"id":436,"data":438,"body":445,"filePath":446,"digest":447,"rendered":448,"legacyId":465},{"title":439,"description":440,"postSlug":441,"image":397,"ogImage":442,"ogImageAlt":439,"categories":443,"pubDate":444},"How important works with CSS cascade layers","A short explanation of how important works with CSS cascade layers","css-cascade-layers-and-important/","images/twitter/2023-12-06-css-cascade-layers-and-important.png",[114,221,400,401],["Date","2023-12-06T00:00:00.000Z"],"I was working with CSS Cascade layers and Bootstrap 5 and learned that the specificity of `important` works very differently.\n\n## How `important` is normally used\n\nNormally how `important` works is that important will override everything other style on the page.\n\n```css\np {\n  color: red;\n}\n\np {\n  color: green !important;\n}\n\np {\n  color: blue;\n}\n```\n\n\u003Cdiv class=\"html-example\" id=\"important-example-one\">\n  \u003Cp>This should be green.\u003C/p>\n\u003C/div>\n\n\u003Cstyle>\n  #important-example-one p {\n    color: pink;\n  }\n\n  #important-example-one p {\n    color: lightgreen !important;\n  }\n\n  #important-example-one p {\n    color: lightblue;\n  }\n\u003C/style>\n\nIn this case also if you were to state important again the last style with important will have the highest specificity.\n\n```css\np {\n  color: red;\n}\n\np {\n  color: green !important;\n}\n\np {\n  color: blue;\n}\n\np {\n  color: palegoldenrod !important;\n}\n```\n\n\u003Cdiv class=\"html-example\" id=\"important-example-two\">\n  \u003Cp>This should be yellow.\u003C/p>\n\u003C/div>\n\n\u003Cstyle>\n  #important-example-two p {\n    color: pink;\n  }\n\n  #important-example-two p {\n    color: lightgreen !important;\n  }\n\n  #important-example-two p {\n    color: lightblue;\n  }\n\n  #important-example-two p {\n    color: palegoldenrod !important;\n  }\n\u003C/style>\n\n## How `important` works with Cascade Layers\n\nIn CSS Cascade Layers this all works quite a bit differently. Normally the way specificity works in cascade layers is that the later layers have higher specificity than the previous layers. Additionally styles not inside of a layer will have higher specificity than styles within layers.\n\nWhere this gets weird is when you throw `important` into the ring. The first time `important` is declared in a layer takes specificity over all other styles including any additional `important` declarations on the selector. Even more strangely declaring `important` outside of a layer either at the very start of a file or the very end, that first `important` declaration takes specificity over those outside of a layer.\n\n```css\n@layer layerOne, layerTwo;\n\n@layer layerOne {\n  p {\n    color: pink;\n  }\n}\n\n@layer layerTwo {\n  p {\n    color: lightblue;\n  }\n}\n\np {\n  color: palegoldenrod;\n}\n```\n\n\u003Cdiv class=\"html-example\" id=\"important-example-three\">\n  \u003Cp>This should be pink.\u003C/p>\n\u003C/div>\n\n\u003Cstyle>\n  #important-example-three p {\n    color: purple !important;\n  }\n\n  @layer layerOne, layerTwo;\n\n  @layer layerOne {\n    #important-example-three p {\n      color: pink !important;\n    }\n  }\n\n  @layer layerTwo {\n    #important-example-three p {\n      color: lightblue;\n    }\n  }\n\n  #important-example-three p {\n    color: palegoldenrod !important;\n  }\n\u003C/style>\n\n## Why does this matter?\n\nYou might be asking why does this even matter since we shouldn't even need `important` with layers. The problem I had was Bootstraps utilities classes. Most of the utilities use `important` and with layers you want to import/wrap all vendor styles withing a vendor layer that goes at the start of the `@layer` stack. Which means that those important become almost impossible to override.\n\nSo how do you override them? Well the only solution I have found so far is to create some kind of \"exceptions\" layer and then place that layer at the very start of the layer stack. This really isn't ideal so hopefully down the line now that layers are supported across the board Bootstrap and other frameworks, plugins, etc will move to layering their CSS and move away from using important.","src/content/blog/2023-12/css-cascade-layers-and-important.md","f6ae62aba5aa6097",{"html":449,"metadata":450},"\u003Cp>I was working with CSS Cascade layers and Bootstrap 5 and learned that the specificity of \u003Ccode>important\u003C/code> works very differently.\u003C/p>\n\u003Ch2 id=\"how-important-is-normally-used\">How \u003Ccode>important\u003C/code> is normally used\u003C/h2>\n\u003Cp>Normally how \u003Ccode>important\u003C/code> works is that important will override everything other style on the page.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> red\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> green \u003Cspan class=\"token important\">!important\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> blue\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cdiv class=\"html-example\" id=\"important-example-one\">\n  \u003Cp>This should be green.\u003C/p>\n\u003C/div>\n\u003Cstyle>\n  #important-example-one p {\n    color: pink;\n  }\n\n  #important-example-one p {\n    color: lightgreen !important;\n  }\n\n  #important-example-one p {\n    color: lightblue;\n  }\n\u003C/style>\n\u003Cp>In this case also if you were to state important again the last style with important will have the highest specificity.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> red\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> green \u003Cspan class=\"token important\">!important\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> blue\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> palegoldenrod \u003Cspan class=\"token important\">!important\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cdiv class=\"html-example\" id=\"important-example-two\">\n  \u003Cp>This should be yellow.\u003C/p>\n\u003C/div>\n\u003Cstyle>\n  #important-example-two p {\n    color: pink;\n  }\n\n  #important-example-two p {\n    color: lightgreen !important;\n  }\n\n  #important-example-two p {\n    color: lightblue;\n  }\n\n  #important-example-two p {\n    color: palegoldenrod !important;\n  }\n\u003C/style>\n\u003Ch2 id=\"how-important-works-with-cascade-layers\">How \u003Ccode>important\u003C/code> works with Cascade Layers\u003C/h2>\n\u003Cp>In CSS Cascade Layers this all works quite a bit differently. Normally the way specificity works in cascade layers is that the later layers have higher specificity than the previous layers. Additionally styles not inside of a layer will have higher specificity than styles within layers.\u003C/p>\n\u003Cp>Where this gets weird is when you throw \u003Ccode>important\u003C/code> into the ring. The first time \u003Ccode>important\u003C/code> is declared in a layer takes specificity over all other styles including any additional \u003Ccode>important\u003C/code> declarations on the selector. Even more strangely declaring \u003Ccode>important\u003C/code> outside of a layer either at the very start of a file or the very end, that first \u003Ccode>important\u003C/code> declaration takes specificity over those outside of a layer.\u003C/p>\n\u003Cpre class=\"language-css\" data-language=\"css\">\u003Ccode is:raw=\"\" class=\"language-css\">\u003Cspan class=\"token atrule\">\u003Cspan class=\"token rule\">@layer\u003C/span> layerOne\u003Cspan class=\"token punctuation\">,\u003C/span> layerTwo\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/span>\n\n\u003Cspan class=\"token atrule\">\u003Cspan class=\"token rule\">@layer\u003C/span> layerOne\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> pink\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token atrule\">\u003Cspan class=\"token rule\">@layer\u003C/span> layerTwo\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n    \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> lightblue\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\n\u003Cspan class=\"token selector\">p\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n  \u003Cspan class=\"token property\">color\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span> palegoldenrod\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cdiv class=\"html-example\" id=\"important-example-three\">\n  \u003Cp>This should be pink.\u003C/p>\n\u003C/div>\n\u003Cstyle>\n  #important-example-three p {\n    color: purple !important;\n  }\n\n  @layer layerOne, layerTwo;\n\n  @layer layerOne {\n    #important-example-three p {\n      color: pink !important;\n    }\n  }\n\n  @layer layerTwo {\n    #important-example-three p {\n      color: lightblue;\n    }\n  }\n\n  #important-example-three p {\n    color: palegoldenrod !important;\n  }\n\u003C/style>\n\u003Ch2 id=\"why-does-this-matter\">Why does this matter?\u003C/h2>\n\u003Cp>You might be asking why does this even matter since we shouldn’t even need \u003Ccode>important\u003C/code> with layers. The problem I had was Bootstraps utilities classes. Most of the utilities use \u003Ccode>important\u003C/code> and with layers you want to import/wrap all vendor styles withing a vendor layer that goes at the start of the \u003Ccode>@layer\u003C/code> stack. Which means that those important become almost impossible to override.\u003C/p>\n\u003Cp>So how do you override them? Well the only solution I have found so far is to create some kind of “exceptions” layer and then place that layer at the very start of the layer stack. This really isn’t ideal so hopefully down the line now that layers are supported across the board Bootstrap and other frameworks, plugins, etc will move to layering their CSS and move away from using important.\u003C/p>",{"headings":451,"imagePaths":461,"frontmatter":462},[452,455,458],{"depth":97,"slug":453,"text":454},"how-important-is-normally-used","How important is normally used",{"depth":97,"slug":456,"text":457},"how-important-works-with-cascade-layers","How important works with Cascade Layers",{"depth":97,"slug":459,"text":460},"why-does-this-matter","Why does this matter?",[],{"tags":209,"categories":463,"postSlug":441,"pubDate":464,"title":439,"description":440,"image":397,"ogImage":442,"ogImageAlt":439},[114,221,400,401],["Date","2023-12-06T00:00:00.000Z"],"2023-12/css-cascade-layers-and-important.md","2024-02/blogging-about-my-hobbies",{"id":466,"data":468,"body":476,"filePath":477,"digest":478,"legacyId":479,"deferredRender":33},{"title":469,"description":470,"postSlug":471,"image":397,"ogImage":442,"ogImageAlt":439,"categories":472,"pubDate":475},"Blogging about my hobbies","This year I'm wanting to start writing about some none dev things that I do.","blogging-about-my-hobbies",[473,474],"hobbies","woodworking",["Date","2024-02-12T00:00:00.000Z"],"import { Image } from \"astro:assets\"\nimport imgOne from \"/src/images/posts/2024-02/blogging-about-my-hobbies/1-first-h-frame.jpg\"\nimport imgTwo from \"/src/images/posts/2024-02/blogging-about-my-hobbies/2-h-frames-finished.jpg\"\nimport imgThree from \"/src/images/posts/2024-02/blogging-about-my-hobbies/3-h-frames-with-apron.jpg\"\nimport imgFour from \"/src/images/posts/2024-02/blogging-about-my-hobbies/4-completed-top.jpg\"\n\nimport SimpleGallery from \"/src/components/SimpleGallery.vue\"\n\nexport const imgSizes = { thumb: 300, full: 1440 }\nexport const imageArry = [\n  {\n    img: imgOne,\n    id: \"imgOne\",\n    alt: \"First frame that will form the legs of the bench\",\n  },\n  {\n    img: imgTwo,\n    id: \"imgTwo\",\n    alt: \"The two H frames for the legs clamped up ready to be planed\",\n  },\n  {\n    img: imgThree,\n    id: \"imgThree\",\n    alt: \"The H frames attached to the aprons and cross braces added\",\n  },\n  {\n    img: imgFour,\n    id: \"imgFour\",\n    alt: \"Finished assembly ready to have the dog holes bored\",\n  },\n]\n\nI've been wanting about doing a bit of blogging about my hobbies, specifically woodworking, as I learn more about hand tool woodworking. Over the winter holidays I bought a year subscription to [The Hand Tool School](https://handtoolschool.net/) by Shannon Rogers.\n\nThe site has a series of semesters that bring you from very little woodworking knowledge and minimal tools, with every project building upon the skills from the previous. There are also an unreal amount of supplementary videos covering specific skills (planing, sawing, sharpening, etc). With all of that here is the first project of the Orientation Semester.\n\n## Orientation Semester Project One: Workbench\n\n\u003CSimpleGallery>\n  {imageArry.map(image => (\n    \u003Cfigure>\n      \u003Ca href={image.img.src} target=\"_blank\">\n        \u003CImage\n          src={image.img}\n          alt={image.alt}\n          width=\"1200\"\n          slot=\"gallery-full\"\n        />\n      \u003C/a>\n      \u003Cfigcaption>{image.alt}\u003C/figcaption>\n    \u003C/figure>\n  ))}\n\u003C/SimpleGallery>\n\nThis first project was a great start showing basic marking and measuring skills and lots of mortise and tenon joinery (the base for many pieces of furniture). I had never cut a mortise and tenon before outside of one very sloppy wooden mallet years ago. There are some kinda sloppy joints, but they have been holding great for the last few weeks and the bench is incredibly sturdy.\n\nI think the biggest thing I learned was how important it will be for future projects to have better milled lumber. Working straight off of big box store lumber without making sure it was straight made for a lot more joint clean up. The biggest upside of this project is it gave me a ton of practice using chisels and saws and really got me much more comfortable with those two tools specifically\n\nNext up will be Project Two: Sloyd Hooks. Keep an eye out for my next post about those in a few(ish) weeks.","src/content/blog/2024-02/blogging-about-my-hobbies.mdx","ad383162be1b1683","2024-02/blogging-about-my-hobbies.mdx"]